====== Creating Rhino .NET Plugins that use the Zoo ======
> **Developer:** //[[developer:zoo|Zoo 5.0]]//
> **Summary:** //Discusses how to create Rhino 5.0 plugins, based on RhinoCommon, to obtain licenses from the Rhino license manager and the Zoo.//

===== Overview =====
Zoo 5.0 allows 3rd party plugin developers to add licensing support for their products to the Zoo.

The RhinoCommon .NET SDK, new for Rhino 5.0, allows developers to write plugins for Rhino that use the Rhino license manager and obtain licenses from Zoo servers.

===== Requirements =====
Rhino .NET plugins are .NET Framework 4.0 assemblies. Thus, to create a .NET plugin for Rhino 5.0, you will need one of the following development tools::

  - Microsoft Visual C# 2010
  - Microsoft Visual Basic .NET 2010
  - [[http://download.rhino3d.com/en/Rhino/5.0/RhinoCommonSdk|RhinoCommon .NET SDK]]

Also, all Rhino plugins that use the Rhino license manager to access the Zoo must be signed with an Authenticode certificate issued by McNeel Plugin Security. These certificates are free but must be requested by each developer. Developers must agree to the //Terms of Use// before a certificate is issued.

===== Creating a Rhino .NET Plugin using RhinoCommon =====
The following are the general steps required to create a Rhino plugin. 
  - Make sure you have Rhino 5.0 installed.
  - Make sure you have the [[http://download.rhino3d.com/en/Rhino/5.0/RhinoCommonSdk|RhinoCommon .NET SDK]] installed.
  - Launch Microsoft Visual Studio 2010.
  - Create a new project, either C# or VB.NET, based on the **RhinoCommon Plugin** project template.
  - Build your plugin.
  - Launch Rhino and use **PlugInManager** to install your plugin (to verify that it was correctly built).

===== Adding Licensing Support to your Plugin Project =====
After you have built and tested your basic plugin, you can add licensing support as follows:
  - In your plugin's **Rhino.Plugins** inherited class, create a new method with the same signature as the **Rhino.Plugins.ValidateProductKeyDelegate** delegate. Rhino will call into this function whenever it needs your plugin to validate a license that is entered by a user, returned by the Rhino license manager (standalone node), or returned from a Zoo server (network node). For details, see the example RhinoCommon plugins listed below.
  - In your plugin's **OnLoad** member, call **Rhino.Plugins.GetLicense** and pass it the build type of the license required by your product and your delegate function.
  - Build your plugin.
  - Digitally sign your plugin.
  - Launch Rhino and test your plugin. When you load your plugin for the first time, you will be prompted to enter a license.
{{:developer:licensenotfoundcs.png|}}

===== Managing your License =====
Rhino plugins that use the Rhino license manager appear in the Licenses page of the Options dialog. Here, the user is allowed to view and manage the license.

{{:developer:licensetools.png|}}

===== Rhino Plug-in Sample =====
[[https://github.com/mcneel/Zoo5|Sample RhinoCommon plug-in projects on GitHub]]

\\

{{tag>Developer zoodev}}
