======網格診斷======
//以Rhino 4的說明檔重製此文//                                                                                                                    

有時候模型可能會損壞，損壞的部分可能會造成錯誤。

用Rhino的工具也是有可能做出壞掉的模型，比如：如果用自交曲線來修剪一個表面，Rhino會讓你這麼做，但是做出來的模型沒有經過精準的定義，到後來就會引起一些問題。

另一個問題是一個很小的修整邊緣，加入在連續曲面上一個較大的修剪曲線。如果Rhino將這些較大的邊緣做相稱調整，有時候那條很小的修整邊緣就會被壓縮得更厲害，甚至只剩下一個點。這個被壓縮過的邊緣已經沒有意義，日後會造成問題。

用小小細細的線連接修剪過的曲線，而不是利用兩曲線的端點做連結，終究會影響到以後陸續加入的邊緣，最後也會造成問題。

有時候一些其他運算方式也會衍生出極小的邊緣，比如布林運算，每個物件相對位置有時候就是只差一點點。

修剪邊緣非常短或自交是造成錯誤的最大原因。

Rhino 有一些工具可以檢查模型是否有這些錯誤。

首先先嘗試**Check**指令。如果您的模型無法通過**Check**，那麼將會列出一些具體的問題，您可以藉由此清單來微調模型。

如果模型通過**Check**，並不自動表示為100%正確的結構。有些有問題的模型部位，比如曲面摺疊或是自身交疊，這是非常耗費時間而且難以自動偵測的錯誤，而且**Check**指令並不會檢查到這些東西，但能夠檢查物件整體結構。

解決方式是**Explode**、**Untrim**,再次**Trim**，然後**Join**。如果模型裡有很多細小的邊緣，請使用**SplitEdge**指令把所有邊緣分開，讓他們有個相容的結構，再用**JoinEdge**手動配對。

當試圖將一些長的跟很小的東西接在一起，有可能會混淆**Join**指令 - 如果碰到問題，請用低階手動**JoinEdge**來替代。

這些工具就在**Analyze**功能表的**Edge Tools**底下。您可能需要用到好幾項這一類的工具來修復有問題的模型。

===避免建模錯誤===

  * 大致上來說，請避免在模型上用到細小的邊緣。
  * 不要在連結兩個物件的曲線中間的微小直線上使用曲線。
  * 確認兩相連接的部分都是乾淨簡單的邊緣。

**您可以...**

  *列出物件的數據結構--- **List**指令

  * 檢查物件 ---**Check**以及**CheckMesh** (v4) 指令。

  * 選擇壞掉的不好的物件 ---**SelBadObjects**以及**ExtractBadSrf**指令。
