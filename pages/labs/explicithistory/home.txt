====== Grasshopper Main Page 1 ======

| {{:legacy:en:ExplicitHistoryBanner.png}} |  //**Grasshopper Wiki Pages**// |
|  //[[http://www.mcneel.com|Robert McNeel & Associates]]// |

----

> **Summary:** //Main Wiki page for the Grasshopper Plugin//

\\

<color Green>**Grasshopper now has its own site - www.grasshopper3d.com\\ 
Go there for downloads, more info, the Grasshopper forum, etc.**</color>

[[http://www.grasshopper3d.com/|Main Page]]\\ 
[[http://www.grasshopper3d.com/page/download-1|Download Page]]\\ 
[[http://www.grasshopper3d.com/forum|Grasshopper Forum]]

<color yellowgreen>**It is //highly recommended// that you have the latest service release (SR) of Rhino installed in order to run Grasshopper**.</color>

\\

====== Installation instructions:======

\\

<color green> **The plugin cannot be loaded over a network, be sure to put it on a local disk!**</color>

\\

The current versions of Grasshopper are self-installing .exe's.\\ 
Just download the executable from the [[http://www.grasshopper3d.com/|Grasshopper site]] and run it to install.  //Rhino should be closed when installing.//\\ 
It will install itself automatically in a "Grasshopper" folder inside the //...Rhino X.x > Plug-ins// folder.

Grasshopper will automatically install in the current Rhino version, (usually V4) but you can load it from another version (like V5) by following the manual plug-in install procedure from within that version and pointing the installer at the existing installation.

Once installed, the command <color green>**Grasshopper**</color> will load the plug-in.

Grasshopper is bit-independent, meaning it can be run in either 32 or 64 bit versions of Rhino.


====== Grasshopper pages:======

\\

  - [[labs:explicithistory:interfaceexplained|Grasshopper Interface explained]]
  - [[labs:explicithistory:objectsexplained|Grasshopper Objects explained]]
  - [[labs:explicithistory:persistentdatarecordmanagement|Grasshopper Persistent Data management]]
  - [[labs:explicithistory:volatiledatainheritance|Grasshopper Volatile Data management]]
  - [[labs:explicithistory:datastreammatchingalgorithms|Grasshopper Data Matching explained]]
  - [[labs:explicithistory:examples|Grasshopper tutorials]]
  - [[labs:grasshopperworkshop|Grasshopper workshop outline]]
  - [[labs:grasshoppergallery|Grasshopper Gallery (wiki)]]
  - [[http://www.grasshopper3d.com/photo|Grasshopper Gallery (Grasshopper Site)]]

\\

----
\\


| {{:legacy:en:GH_SquareBanner.jpg}} |

====== Why Grasshopper?======

Rhino4 came with a basic history feature built-in, which is a non-intrusive layer around the workflow that allows for automatic updates of certain modeling steps. The current implementation of History in Rhino4 is implicit, that is: it is recorded as you go. This means there is no additional overhead required at model-time which is exactly the sort of thing we would like to see in Rhino: more features, no additional limitations. However, implicit history cannot do some things which are possible with explicitly defined history.

First of all, the history tree is hidden from the user. The behaviour of the different history stages cannot be adjusted. For example, there is only one chance to set the properties of a history based Loft. Once the surface exists, the only way to change the Loft settings is to recreate the surface. This will break all downstream history records and is thus potentially an extremely expensive limitation. It is also impossible to add or replace curves from a history Loft.

Grasshopper tackles these issues by allowing the user to construct their own "history tree" or better "definition" of the procedure that will be used to construct the object(s).  This definition is constructed in a unique visual and interactive way, making it easy to learn and fun even for people with no previous programming experience.

There are of course limitations that come with the process. It is no longer possible to record the history tree transparently, it has to be specifically constructed by the user. It is impossible to use available Rhino commands since they do not expose the options and settings they need to run.


However, the advantages speak for themselves:

  - The tree is exposed, and can thus in whole or in part be re-used throughout different models.
  - The components on the tree are exposed and can thus be replaced or adjusted.
  - The operations are not tied to geometry in the model, it is possible to make a tree which only deals with mathematics.
  - Mathematical and logical relationships can be constructed.
  - External (to Rhino) sources can be used to retrieve and store data.

This makes Grasshopper is a marvelous tool to be explored by anyone who is interested in generative modeling of complex objects or more control over the characteristics of even simple objects. 

Grasshopper is a Work-in-Progress.  Features and procedures are added/changed often.  Much more time will be needed for the feature set to be complete enough for an official 1.0 release, but it is already being used by thouands of people world-wide.



