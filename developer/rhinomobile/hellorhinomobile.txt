======RhinoMobile - HelloRhinoMobile======

This page presumes you gone through the [[developer:rhinomobile:getting_started|Getting Started]] page and have successfully gotten Xamarin Studio, Xcode, and all the requisite downloaded and prepped.  If you're ready, let's get the HelloRhino app building on both iOS and Android, then take a look at how all the pieces fit together to share code between the platforms.

**Mac Instructions**
  - In Xamarin Studio, open the //HelloRhinoMobile// solution.
  - Right-click the //HelloRhino.Touch// project and select //Set As Startup Project// from the drop-down menu.  This makes //HelloRhino.Touch// the active project for the build.  (//HelloRhino.Touch// is the iOS target project.  The //.Touch// suffix is a naming convention from Mono that conjures Cocoa//Touch// - the iOS library.  It is also a convention that avoids namespace collisions).  
  - Verify that the build is set to //Debug// and the device to //iOS Simulator > iPhone iOS 7//.  Click the //Play/Run// button.
  - [[http://docs.xamarin.com/guides/cross-platform/getting_started/beginning_a_xamarin_trial|Start a Xamarin Trial]].  The Xamarin Starter edition allows you to unlock a 30-day trial of the full Business Edition, which will be necessary for building and using RhinoMobile.  You will need to create a Xamarin Login.  If you are unable to start a trial after creating a login, don't worry, Xamarin Studio will prompt you to when you try to build RhinoMobile projects. FIXME
  - Exit and restart Xamarin Studio.
  - From the Xamarin Studio Home Screen, re-open //HelloRhinoMobile// solution.
  - Verify that Xamarin Studio's full edition has been activated. Navigate to //Xamarin Studio > About Xamarin Studio > Show Details//.  Scroll down and make sure the //Xamarin.iOS// and //Xamarin.Android// are set to //Trial Edition//.  Close the //About Xamarin Studio// window.
  - Click the //Play/Run// button again.  This time the Build should succeed without errors.  After uploading the app bundle to the Simulator, you should see the following:
  - When you done playing around with the HelloRhino example on the iOS Simulator, click the //Stop// button in Xamarin Studio to stop the Debug session.
  - Now let's build and run the Android version.  Right-click the //HelloRhino.Droid// project and select //Set As Startup Project// from the drop-down menu.  As expected, this makes the Android project the default project for the build.  (Much like .Touch, .Droid is a Mono naming convention that avoids namespace collisions and denotes the Android target project).
  - Verify that the build is set to //Debug//.  The time, the device selection drop-down should be disabled.  This is because you don't have an Emulator setup, so let's do that now.
  - Click the //Play/Run// button to start the //HelloRhino.Droid// debug build.
  - The Select Device window should appear.  This is the window where you tell the Android SDK which emulator or device you would like to use for testing.  None of the defaults will do, so let's create a faster emulator.
  - Click the //Create Emulator// button.
  - The Android Virtual Device Manager should launch.  This is part of the Android SDK and will be familiar to you if you have done any Android development before.  This is where you define your Android Virtual Devices (AVDs) that run in the Emulator.
  - Highlight each of the existing AVD and click the Delete button.  These AVDs are much too slow for development.
  - To create a new AVD: Click the //New// button.  The Create new Android Virtual Device (AVD) window appears.  Create a new AVD with the following parameters.  AVD Name: //Nexus7-API18-IntelHAXM//; Device: //Nexus 7//; Target: //Android 4.3 - API Level 18//; CPU/ABI: //Intel Atom (x86)//; Front Camera: //Webcam0//; VM Heap: //64// Emulation Options: //Snapshot enabled? FIXME, Use Host GPU enabled//.
  - You should see your new AVD in the list.  You have just created your first AVD.  More information on creating Emulators can be found in the Android documents.  You can create as many as you need.  Tips on using the Emulator can be found in the [[developer:rhinomobile:si|Simulators & Emulators page]].  For the moment, quit the Android Virtual Device Manager and return to Xamarin Studio.
  - You should see the //Select Device// window again, this time with your new AVD in the list.  Highlight the AVD and click the //Start Emulator// button.  If all went well, after a brief startup period (take our word for it, it's much quicker than the standard emulators) your should see Android boot,  It may take extra time to launch the first time and it is highly recommended that you leave this window open during your development session.  Once Android boots, you are ready to go.
  - Do not close the Android Emulator. Switch back to Xamarin Studio.  In the //Select Device// window, if the //not started// label has not already disappeared, click the //Refresh// button.  Once you see the AVD in black, selectable type-face, you know that Xamarin Studio is ready to launch the app on the Emulator.  Highlight the AVD and click //OK//.
  - If all goes well, much like on iOS, you should see the following: [screenshot] FIXME
  - When you are done playing around with the //HelloRhino.Droid// build, click the //Stop// button back in Xamarin Studio to stop the debug session.

**Windows Instructions**

COMING SOON

=====Cross-Platform Architecture=====

COMING SOON