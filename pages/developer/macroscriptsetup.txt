=====How to integrate macros and scripts into your workspace=====

Macros and scripts can be run in several ways inside Rhino.  The best way to integrate them into your workflow will depend on your preferred way of working as well as which platform you are on - the Rhino for Windows and Rhino for Mac environments are somewhat different.
----
====Macros===
> We'll cover installing macros first, as they're somewhat simpler to get up and running.

===Using the macro editor to work out new macros===
The **MacroEditor** command opens a text editing window in which you can type macros and try them out without the need to edit a button every time. The arrow button runs the macro. If there is anything selected in the editor, it runs the just the selected part, otherwise it runs the whole macro. When the macro runs to your satisfaction, copy and paste the macro to a toolbar button or alias.  A detailed tutorial on macro development can be found [[rhino:basicmacros|here]].

===Create an alias or toolbar button to run your macro===
The easiest way to save and run a macro is either with an alias or a new toolbar button.  

**Alias creation** is essentially the same on either Mac or Windows:

  * In Rhino, go to Options>Aliases (Windows) or Preferences>Aliases (Mac)
  * In Windows, click the "New" button.  On Mac, click the "+" sign in the lower left corner.
  * In the left column, type the alias you want to use.  Aliases cannot contain spaces or special characters.
  * In the right column next to your new alias name, type pr paste in your macro
  * In Windows click OK to save the alias. (Mac saves the alias as soon as you're done typing)
  * Done. Now, when you type your alias at the command line, your macro will run.

**Toolbar button creation and editing** is relatively simple in Windows Rhino. \\ It is somewhat more complicated in Mac Rhino.

  * For Windows Rhino, there are good explanations in the [[http://docs.mcneel.com/rhino/6/help/en-us/index.htm|Help]] file under the topics \\ "Customize toolbars" and "Button Editor".
  * For Mac Rhino, have a look at [[rhino:mac:customizingtheleftsidebarpalette|this Wiki page]] on how to customize your tool palettes.

Once you have created your new button, in the editor window, type or paste in your macro, save and close.




=====Linking to external scripts=====
To set up an external scripts folder:  Find a logical place to create your folder.   //Take care in choosing this folder. Make sure that the user has permissions to access it. // Open the Options dialog, and navigate to the Files tab.  In the //file search paths// box, click the new button and then the little … button and browse to the location of the scripts folder. Then click //OK//.  Exit the options dialog.  Rhino will now go looking for scripts in this folder. 

Currently Python does not read this section, so if you use Python scripts you will also need to do a similar operation inside the Python script editor: Open the editor with **EditPythonScript** and go to Tools>Options and enter the path to your folder in //Module Search Paths//.

To link your button or alias to an external script:  The syntax used will depend on the type of script.  If it is a simple text file with normal Rhino commands (like a long macro), you will need to use the command **ReadCommandFile** **//Filename.txt//**  Substitute the name of your text file for //Filename.txt//.  Paste that string into the left or right button box and you’re good to go.  To run a [[developer:rhinoscript|RhinoScript]] .rvb file use the command **LoadScript** **//Filename.rvb//** instead.  In general, that’s all you need to do, but some scripts are written to run immediately on load. Others are not, so some script tweaking may be necessary.

===Button editor showing pasted in macro and link to external script===
{{:legacy:en:EditToolbarButton.gif}}

You can also paste an entire [[developer:rhinoscript|RhinoScript]] into a button. For that, start with the command **-_RunScript** (not **-_LoadScript**) followed by a space and an open parentheses.  At the end of the script you need a close parentheses. For [[developer:python|python scripts]], you want to use **-_RunPythonScript** instead of just **-_RunScript**.

Don't forget the dash in front of the command, otherwise it will stop and prompt you for what script you want to run.  The underbar insures that the _-Runscript command will run in languages other than English, but it will not insure the actual script will do the same. It has to be written correctly as well.
<code>
  ! _NoEcho -_Runscript (

  Paste in
  your entire
  script here

  )
</code>
===Button editor showing pasted in complete RhinoScript===
{{:legacy:en:EditToolbarButton2.gif}}

Editing in progress 28.08.19 - msh

