===== Sample: Print Instance Definition (Block) Names =====

===== C# =====
<code c#>
[System.Runtime.InteropServices.Guid("71692574-73D4-4665-A617-72A937EBADEE")]
public class ex_printinstancedefinitions : Rhino.Commands.Command
{
  public override string EnglishName { get { return "csInstanceDefinitionNames"; } }

  protected override Rhino.Commands.Result RunCommand(RhinoDoc doc, Rhino.Commands.RunMode mode)
  {
    var idefNames = (from idef in doc.InstanceDefinitions 
                     where idef != null && !idef.IsDeleted
                     select idef.Name);

    foreach (var n in idefNames)
      RhinoApp.WriteLine(String.Format("Instance definition = {0}", n));

    return Rhino.Commands.Result.Success;
  }
}
</code>
===== VB.NET =====
<code vb>
<System.Runtime.InteropServices.Guid("B7391004-8A5D-4B54-88F5-1D2004D70BAC")> _
Public Class ex_printinstancedefinitions
  Inherits Rhino.Commands.Command
  Public Overrides ReadOnly Property EnglishName() As String
    Get
      Return "vbInstanceDefinitionNames"
    End Get
  End Property

  Protected Overrides Function RunCommand(doc As RhinoDoc, mode As Rhino.Commands.RunMode) As Rhino.Commands.Result
    Dim idefNames = (From idef In doc.InstanceDefinitions
                     Where idef IsNot Nothing AndAlso Not idef.IsDeleted
                     Select idef.Name)

    For Each n As String In idefNames
      RhinoApp.WriteLine([String].Format("Instance definition = {0}", n))
    Next

    Return Rhino.Commands.Result.Success
  End Function
End Class
d Namespace
</code>
===== Python =====
<code python>
from scriptcontext import doc

def RunCommand():
  idefNames = [idef.Name for idef in doc.InstanceDefinitions if idef != None and not idef.IsDeleted]

  for n in idefNames:
    print "instance definition = {0}".format(n)

if __name__ == "__main__":
  RunCommand()
</code>

{{tag>Developer rhinocommon}}
