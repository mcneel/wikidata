<xml>
	<material type-name="BrShader_BrazilAdvanced" render-engine-id="66D400A8-0D44-4511-A9D6-613A4B6E0371" type-id="D0893922-D6DD-4241-AC51-1CEA1D1F43A1" notes="Glossy metal and blue car paint
by chipnuts
">
		<parameters>
			<base-2-sided-on type="int">0</base-2-sided-on>
			<base-facemap-on type="bool">false</base-facemap-on>
			<base-faceted-on type="bool">false</base-faceted-on>
			<base-transparent-shadows-on type="bool">true</base-transparent-shadows-on>
			<base-use-os-as-tx-on type="bool">false</base-use-os-as-tx-on>
			<base-env-override type="bool">false</base-env-override>
			<base-extra-light-color type="color">0,0,0,1</base-extra-light-color>
			<base-extra-light-color-subnode-on type="bool">true</base-extra-light-color-subnode-on>
			<base-extra-light-color-subnode-amount type="float">1.0000</base-extra-light-color-subnode-amount>
			<base-extra-light-color-subnode-channel-mode type="string">default</base-extra-light-color-subnode-channel-mode>
			<base-extra-light-color-subnode-channel-string type="string"/>
			<base-ld-map type="float">0.0000</base-ld-map>
			<base-ld-map-subnode-on type="bool">true</base-ld-map-subnode-on>
			<base-ld-map-subnode-amount type="float">1.0000</base-ld-map-subnode-amount>
			<base-ld-map-subnode-channel-mode type="string">default</base-ld-map-subnode-channel-mode>
			<base-ld-map-subnode-channel-string type="string"/>
			<base-bump-map-subnode-on type="bool">true</base-bump-map-subnode-on>
			<base-bump-map-subnode-amount type="float">1.0000</base-bump-map-subnode-amount>
			<base-bump-map-subnode-channel-mode type="string">default</base-bump-map-subnode-channel-mode>
			<base-bump-map-subnode-channel-string type="string"/>
			<base-diffusion-map type="float">0.5000</base-diffusion-map>
			<base-diffusion-map-subnode-on type="bool">true</base-diffusion-map-subnode-on>
			<base-diffusion-map-subnode-amount type="float">1.0000</base-diffusion-map-subnode-amount>
			<base-diffusion-map-subnode-channel-mode type="string">default</base-diffusion-map-subnode-channel-mode>
			<base-diffusion-map-subnode-channel-string type="string"/>
			<highlight-amount type="float">9.3000</highlight-amount>
			<base-shader type="string">car-paint</base-shader>
			<base-shader-hack type="color">0,0,0,1</base-shader-hack>
			<highlight-shader type="string">phong</highlight-shader>
			<highlight-mode type="string">normal</highlight-mode>
			<highlight-shader-hack type="color">0,0,0,1</highlight-shader-hack>
			<reflection-env-on type="bool">false</reflection-env-on>
			<reflection-env-color type="color">0,0,0,1</reflection-env-color>
			<reflection-env-color-subnode-on type="bool">true</reflection-env-color-subnode-on>
			<reflection-env-color-subnode-amount type="float">1.0000</reflection-env-color-subnode-amount>
			<reflection-env-color-subnode-channel-mode type="string">default</reflection-env-color-subnode-channel-mode>
			<reflection-env-color-subnode-channel-string type="string"/>
			<reflection-generate-caustics-on type="bool">true</reflection-generate-caustics-on>
			<reflection-prevent-ir-on type="bool">false</reflection-prevent-ir-on>
			<reflection-glossiness-on type="bool">true</reflection-glossiness-on>
			<reflection-adaptive-on type="bool">true</reflection-adaptive-on>
			<reflection-sample-rate type="int">7</reflection-sample-rate>
			<reflection-max-error type="float">0.0100</reflection-max-error>
			<reflection-decay-on type="bool">false</reflection-decay-on>
			<reflection-decay-color type="color">0,0,0,1</reflection-decay-color>
			<reflection-decay-start units="meters" type="float">0.0000</reflection-decay-start>
			<reflection-decay-end units="meters" type="float">30.4800</reflection-decay-end>
			<reflection-decay-environment type="float">1.0000</reflection-decay-environment>
			<reflection-gloss-focus type="float">0.9500</reflection-gloss-focus>
			<reflection-gloss-focus-subnode-on type="bool">true</reflection-gloss-focus-subnode-on>
			<reflection-gloss-focus-subnode-amount type="float">1.0000</reflection-gloss-focus-subnode-amount>
			<reflection-gloss-focus-subnode-channel-mode type="string">default</reflection-gloss-focus-subnode-channel-mode>
			<reflection-gloss-focus-subnode-channel-string type="string"/>
			<reflection-exclude type="string"/>
			<reflection-mode type="string">ray-traced</reflection-mode>
			<reflection-fade-mode type="string">environment</reflection-fade-mode>
			<reflection-decay-type type="string">linear</reflection-decay-type>
			<reflection-glossiness-mode type="string">angular</reflection-glossiness-mode>
			<refraction-env-on type="bool">false</refraction-env-on>
			<refraction-env-color type="color">0,0,0,1</refraction-env-color>
			<refraction-env-color-subnode-on type="bool">true</refraction-env-color-subnode-on>
			<refraction-env-color-subnode-amount type="float">1.0000</refraction-env-color-subnode-amount>
			<refraction-env-color-subnode-channel-mode type="string">default</refraction-env-color-subnode-channel-mode>
			<refraction-env-color-subnode-channel-string type="string"/>
			<refraction-generate-caustics-on type="bool">true</refraction-generate-caustics-on>
			<refraction-dc-enable-on type="bool">false</refraction-dc-enable-on>
			<refraction-glossiness-on type="bool">false</refraction-glossiness-on>
			<refraction-adaptive-on type="bool">true</refraction-adaptive-on>
			<refraction-sample-rate type="int">10</refraction-sample-rate>
			<refraction-max-error type="float">0.0100</refraction-max-error>
			<refraction-ac-enable-on type="bool">false</refraction-ac-enable-on>
			<refraction-start units="meters" type="float">0.0000</refraction-start>
			<refraction-end units="meters" type="float">30.4800</refraction-end>
			<refraction-ior-variance type="float">0.1000</refraction-ior-variance>
			<refraction-spectral-steps type="int">6</refraction-spectral-steps>
			<refraction-red type="float">0.1000</refraction-red>
			<refraction-green type="float">0.1000</refraction-green>
			<refraction-blue type="float">0.1000</refraction-blue>
			<refraction-gloss-focus type="float">80.0000</refraction-gloss-focus>
			<refraction-gloss-focus-subnode-on type="bool">true</refraction-gloss-focus-subnode-on>
			<refraction-gloss-focus-subnode-amount type="float">1.0000</refraction-gloss-focus-subnode-amount>
			<refraction-gloss-focus-subnode-channel-mode type="string">default</refraction-gloss-focus-subnode-channel-mode>
			<refraction-gloss-focus-subnode-channel-string type="string"/>
			<refraction-color type="color">0,0,0,1</refraction-color>
			<refraction-color-subnode-on type="bool">true</refraction-color-subnode-on>
			<refraction-color-subnode-amount type="float">1.0000</refraction-color-subnode-amount>
			<refraction-color-subnode-channel-mode type="string">default</refraction-color-subnode-channel-mode>
			<refraction-color-subnode-channel-string type="string"/>
			<reflection-custom-curve-data type="string">&lt;xml&gt;&lt;graph tan-scale=&quot;0.2&quot;&gt;&lt;curve enabled=&quot;true&quot; thickness=&quot;2&quot; color=&quot;0.901960784313726,0,0,1&quot; uuid=&quot;&quot;&gt;&lt;pt lock-rotation-on=&quot;true&quot; lock-magnitude-on=&quot;true&quot; length-ratio=&quot;1&quot; locked-angle=&quot;3.14159265358979&quot; uuid=&quot;&quot; x=&quot;0&quot; y=&quot;0&quot;&gt;&lt;tan-in type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;-0.05&quot; y=&quot;-0.05&quot;/&gt;&lt;tan-out type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;0.05&quot; y=&quot;0.05&quot;/&gt;&lt;/pt&gt;&lt;pt lock-rotation-on=&quot;true&quot; lock-magnitude-on=&quot;true&quot; length-ratio=&quot;1&quot; locked-angle=&quot;3.14159265358979&quot; uuid=&quot;&quot; x=&quot;1&quot; y=&quot;1&quot;&gt;&lt;tan-in type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;-0.05&quot; y=&quot;-0.05&quot;/&gt;&lt;tan-out type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;0.05&quot; y=&quot;0.05&quot;/&gt;&lt;/pt&gt;&lt;/curve&gt;&lt;curve enabled=&quot;true&quot; thickness=&quot;1.9&quot; color=&quot;0,0.501960784313725,0,1&quot; uuid=&quot;&quot;&gt;&lt;pt lock-rotation-on=&quot;true&quot; lock-magnitude-on=&quot;true&quot; length-ratio=&quot;1&quot; locked-angle=&quot;3.14159265358979&quot; uuid=&quot;&quot; x=&quot;0&quot; y=&quot;0&quot;&gt;&lt;tan-in type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;-0.05&quot; y=&quot;-0.05&quot;/&gt;&lt;tan-out type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;0.05&quot; y=&quot;0.05&quot;/&gt;&lt;/pt&gt;&lt;pt lock-rotation-on=&quot;true&quot; lock-magnitude-on=&quot;true&quot; length-ratio=&quot;1&quot; locked-angle=&quot;3.14159265358979&quot; uuid=&quot;&quot; x=&quot;1&quot; y=&quot;1&quot;&gt;&lt;tan-in type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;-0.05&quot; y=&quot;-0.05&quot;/&gt;&lt;tan-out type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;0.05&quot; y=&quot;0.05&quot;/&gt;&lt;/pt&gt;&lt;/curve&gt;&lt;curve enabled=&quot;true&quot; thickness=&quot;1.8&quot; color=&quot;0,0.313725490196078,0.784313725490196,1&quot; uuid=&quot;&quot;&gt;&lt;pt lock-rotation-on=&quot;true&quot; lock-magnitude-on=&quot;true&quot; length-ratio=&quot;1&quot; locked-angle=&quot;3.14159265358979&quot; uuid=&quot;&quot; x=&quot;0&quot; y=&quot;0&quot;&gt;&lt;tan-in type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;-0.05&quot; y=&quot;-0.05&quot;/&gt;&lt;tan-out type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;0.05&quot; y=&quot;0.05&quot;/&gt;&lt;/pt&gt;&lt;pt lock-rotation-on=&quot;true&quot; lock-magnitude-on=&quot;true&quot; length-ratio=&quot;1&quot; locked-angle=&quot;3.14159265358979&quot; uuid=&quot;&quot; x=&quot;1&quot; y=&quot;1&quot;&gt;&lt;tan-in type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;-0.05&quot; y=&quot;-0.05&quot;/&gt;&lt;tan-out type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;0.05&quot; y=&quot;0.05&quot;/&gt;&lt;/pt&gt;&lt;/curve&gt;&lt;/graph&gt;&lt;/xml&gt;</reflection-custom-curve-data>
			<refraction-custom-curve-data type="string">&lt;xml&gt;&lt;graph tan-scale=&quot;0.2&quot;&gt;&lt;curve enabled=&quot;true&quot; thickness=&quot;2&quot; color=&quot;0.901960784313726,0,0,1&quot; uuid=&quot;&quot;&gt;&lt;pt lock-rotation-on=&quot;true&quot; lock-magnitude-on=&quot;true&quot; length-ratio=&quot;1&quot; locked-angle=&quot;3.14159265358979&quot; uuid=&quot;&quot; x=&quot;0&quot; y=&quot;0&quot;&gt;&lt;tan-in type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;-0.05&quot; y=&quot;-0.05&quot;/&gt;&lt;tan-out type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;0.05&quot; y=&quot;0.05&quot;/&gt;&lt;/pt&gt;&lt;pt lock-rotation-on=&quot;true&quot; lock-magnitude-on=&quot;true&quot; length-ratio=&quot;1&quot; locked-angle=&quot;3.14159265358979&quot; uuid=&quot;&quot; x=&quot;1&quot; y=&quot;1&quot;&gt;&lt;tan-in type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;-0.05&quot; y=&quot;-0.05&quot;/&gt;&lt;tan-out type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;0.05&quot; y=&quot;0.05&quot;/&gt;&lt;/pt&gt;&lt;/curve&gt;&lt;curve enabled=&quot;true&quot; thickness=&quot;1.9&quot; color=&quot;0,0.501960784313725,0,1&quot; uuid=&quot;&quot;&gt;&lt;pt lock-rotation-on=&quot;true&quot; lock-magnitude-on=&quot;true&quot; length-ratio=&quot;1&quot; locked-angle=&quot;3.14159265358979&quot; uuid=&quot;&quot; x=&quot;0&quot; y=&quot;0&quot;&gt;&lt;tan-in type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;-0.05&quot; y=&quot;-0.05&quot;/&gt;&lt;tan-out type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;0.05&quot; y=&quot;0.05&quot;/&gt;&lt;/pt&gt;&lt;pt lock-rotation-on=&quot;true&quot; lock-magnitude-on=&quot;true&quot; length-ratio=&quot;1&quot; locked-angle=&quot;3.14159265358979&quot; uuid=&quot;&quot; x=&quot;1&quot; y=&quot;1&quot;&gt;&lt;tan-in type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;-0.05&quot; y=&quot;-0.05&quot;/&gt;&lt;tan-out type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;0.05&quot; y=&quot;0.05&quot;/&gt;&lt;/pt&gt;&lt;/curve&gt;&lt;curve enabled=&quot;true&quot; thickness=&quot;1.8&quot; color=&quot;0,0.313725490196078,0.784313725490196,1&quot; uuid=&quot;&quot;&gt;&lt;pt lock-rotation-on=&quot;true&quot; lock-magnitude-on=&quot;true&quot; length-ratio=&quot;1&quot; locked-angle=&quot;3.14159265358979&quot; uuid=&quot;&quot; x=&quot;0&quot; y=&quot;0&quot;&gt;&lt;tan-in type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;-0.05&quot; y=&quot;-0.05&quot;/&gt;&lt;tan-out type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;0.05&quot; y=&quot;0.05&quot;/&gt;&lt;/pt&gt;&lt;pt lock-rotation-on=&quot;true&quot; lock-magnitude-on=&quot;true&quot; length-ratio=&quot;1&quot; locked-angle=&quot;3.14159265358979&quot; uuid=&quot;&quot; x=&quot;1&quot; y=&quot;1&quot;&gt;&lt;tan-in type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;-0.05&quot; y=&quot;-0.05&quot;/&gt;&lt;tan-out type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;0.05&quot; y=&quot;0.05&quot;/&gt;&lt;/pt&gt;&lt;/curve&gt;&lt;/graph&gt;&lt;/xml&gt;</refraction-custom-curve-data>
			<refraction-exclude type="string"/>
			<refraction-mode type="string">ray-traced</refraction-mode>
			<refraction-absorption-type type="string">exponential</refraction-absorption-type>
			<refraction-glossiness-mode type="string">angular</refraction-glossiness-mode>
			<refraction-spectra-type type="string">xyz</refraction-spectra-type>
			<ams-refract-on type="bool">true</ams-refract-on>
			<ams-ambient-color type="color">0,0,0,1</ams-ambient-color>
			<ams-ambient-color-subnode-on type="bool">true</ams-ambient-color-subnode-on>
			<ams-ambient-color-subnode-amount type="float">1.0000</ams-ambient-color-subnode-amount>
			<ams-ambient-color-subnode-channel-mode type="string">default</ams-ambient-color-subnode-channel-mode>
			<ams-ambient-color-subnode-channel-string type="string"/>
			<ams-diffuse-color type="color">0.149019613862038,0.168627455830574,0.30588236451149,1</ams-diffuse-color>
			<ams-diffuse-color-subnode-on type="bool">true</ams-diffuse-color-subnode-on>
			<ams-diffuse-color-subnode-amount type="float">1.0000</ams-diffuse-color-subnode-amount>
			<ams-diffuse-color-subnode-channel-mode type="string">default</ams-diffuse-color-subnode-channel-mode>
			<ams-diffuse-color-subnode-channel-string type="string"/>
			<ams-luminosity-color type="color">0,0,0,1</ams-luminosity-color>
			<ams-luminosity-color-subnode-on type="bool">true</ams-luminosity-color-subnode-on>
			<ams-luminosity-color-subnode-amount type="float">1.0000</ams-luminosity-color-subnode-amount>
			<ams-luminosity-color-subnode-channel-mode type="string">default</ams-luminosity-color-subnode-channel-mode>
			<ams-luminosity-color-subnode-channel-string type="string"/>
			<ams-ambient-amount type="float">1.0000</ams-ambient-amount>
			<ams-ambient-amount-subnode-on type="bool">true</ams-ambient-amount-subnode-on>
			<ams-ambient-amount-subnode-amount type="float">1.0000</ams-ambient-amount-subnode-amount>
			<ams-ambient-amount-subnode-channel-mode type="string">default</ams-ambient-amount-subnode-channel-mode>
			<ams-ambient-amount-subnode-channel-string type="string"/>
			<ams-diffuse-amount type="float">1.0000</ams-diffuse-amount>
			<ams-diffuse-amount-subnode-on type="bool">true</ams-diffuse-amount-subnode-on>
			<ams-diffuse-amount-subnode-amount type="float">1.0000</ams-diffuse-amount-subnode-amount>
			<ams-diffuse-amount-subnode-channel-mode type="string">default</ams-diffuse-amount-subnode-channel-mode>
			<ams-diffuse-amount-subnode-channel-string type="string"/>
			<ams-luminosity-amount type="float">1.0000</ams-luminosity-amount>
			<ams-luminosity-amount-subnode-on type="bool">true</ams-luminosity-amount-subnode-on>
			<ams-luminosity-amount-subnode-amount type="float">1.0000</ams-luminosity-amount-subnode-amount>
			<ams-luminosity-amount-subnode-channel-mode type="string">default</ams-luminosity-amount-subnode-channel-mode>
			<ams-luminosity-amount-subnode-channel-string type="string"/>
			<ams-opacity-color type="color">1,1,1,1</ams-opacity-color>
			<ams-opacity-color-subnode-on type="bool">true</ams-opacity-color-subnode-on>
			<ams-opacity-color-subnode-amount type="float">1.0000</ams-opacity-color-subnode-amount>
			<ams-opacity-color-subnode-channel-mode type="string">default</ams-opacity-color-subnode-channel-mode>
			<ams-opacity-color-subnode-channel-string type="string"/>
			<ams-default-ior type="float">1.5500</ams-default-ior>
			<ams-default-ior-subnode-on type="bool">true</ams-default-ior-subnode-on>
			<ams-default-ior-subnode-amount type="float">1.0000</ams-default-ior-subnode-amount>
			<ams-default-ior-subnode-channel-mode type="string">default</ams-default-ior-subnode-channel-mode>
			<ams-default-ior-subnode-channel-string type="string"/>
			<ams-reflect-color type="color">0,0,0,1</ams-reflect-color>
			<ams-reflect-color-subnode-on type="bool">true</ams-reflect-color-subnode-on>
			<ams-reflect-color-subnode-amount type="float">1.0000</ams-reflect-color-subnode-amount>
			<ams-reflect-color-subnode-channel-mode type="string">default</ams-reflect-color-subnode-channel-mode>
			<ams-reflect-color-subnode-channel-string type="string"/>
			<ams-reflect-tint-color type="color">1,1,1,1</ams-reflect-tint-color>
			<ams-reflect-tint-color-subnode-on type="bool">true</ams-reflect-tint-color-subnode-on>
			<ams-reflect-tint-color-subnode-amount type="float">1.0000</ams-reflect-tint-color-subnode-amount>
			<ams-reflect-tint-color-subnode-channel-mode type="string">default</ams-reflect-tint-color-subnode-channel-mode>
			<ams-reflect-tint-color-subnode-channel-string type="string"/>
			<ams-reflect-comp-mode type="string">blend</ams-reflect-comp-mode>
			<ams-reflectivity-amount type="float">1.0000</ams-reflectivity-amount>
			<ams-reflectivity-amount-subnode-on type="bool">true</ams-reflectivity-amount-subnode-on>
			<ams-reflectivity-amount-subnode-amount type="float">1.0000</ams-reflectivity-amount-subnode-amount>
			<ams-reflectivity-amount-subnode-channel-mode type="string">default</ams-reflectivity-amount-subnode-channel-mode>
			<ams-reflectivity-amount-subnode-channel-string type="string"/>
			<hl-ams-specular-color type="color">1,1,1,1</hl-ams-specular-color>
			<hl-ams-specular-color-subnode-on type="bool">true</hl-ams-specular-color-subnode-on>
			<hl-ams-specular-color-subnode-amount type="float">1.0000</hl-ams-specular-color-subnode-amount>
			<hl-ams-specular-color-subnode-channel-mode type="string">default</hl-ams-specular-color-subnode-channel-mode>
			<hl-ams-specular-color-subnode-channel-string type="string"/>
			<hl-ams-specular-level type="float">0.8000</hl-ams-specular-level>
			<hl-ams-specular-level-subnode-on type="bool">true</hl-ams-specular-level-subnode-on>
			<hl-ams-specular-level-subnode-amount type="float">1.0000</hl-ams-specular-level-subnode-amount>
			<hl-ams-specular-level-subnode-channel-mode type="string">default</hl-ams-specular-level-subnode-channel-mode>
			<hl-ams-specular-level-subnode-channel-string type="string"/>
			<hl-ams-glossiness type="float">0.5000</hl-ams-glossiness>
			<hl-ams-glossiness-subnode-on type="bool">true</hl-ams-glossiness-subnode-on>
			<hl-ams-glossiness-subnode-amount type="float">1.0000</hl-ams-glossiness-subnode-amount>
			<hl-ams-glossiness-subnode-channel-mode type="string">default</hl-ams-glossiness-subnode-channel-mode>
			<hl-ams-glossiness-subnode-channel-string type="string"/>
			<hl-ams-soften type="float">0.1000</hl-ams-soften>
			<hl-ams-soften-subnode-on type="bool">true</hl-ams-soften-subnode-on>
			<hl-ams-soften-subnode-amount type="float">1.0000</hl-ams-soften-subnode-amount>
			<hl-ams-soften-subnode-channel-mode type="string">default</hl-ams-soften-subnode-channel-mode>
			<hl-ams-soften-subnode-channel-string type="string"/>
			<hl-ams-gain type="float">0.5000</hl-ams-gain>
			<hl-ams-gain-subnode-on type="bool">true</hl-ams-gain-subnode-on>
			<hl-ams-gain-subnode-amount type="float">1.0000</hl-ams-gain-subnode-amount>
			<hl-ams-gain-subnode-channel-mode type="string">default</hl-ams-gain-subnode-channel-mode>
			<hl-ams-gain-subnode-channel-string type="string"/>
			<hl-ams-area-speculars-on type="bool">false</hl-ams-area-speculars-on>
			<ams-carpaint-falloff-color type="color">0.26274511218071,0.26274511218071,0.26274511218071,1</ams-carpaint-falloff-color>
			<ams-carpaint-falloff-color-subnode-on type="bool">true</ams-carpaint-falloff-color-subnode-on>
			<ams-carpaint-falloff-color-subnode-amount type="float">1.0000</ams-carpaint-falloff-color-subnode-amount>
			<ams-carpaint-falloff-color-subnode-channel-mode type="string">default</ams-carpaint-falloff-color-subnode-channel-mode>
			<ams-carpaint-falloff-color-subnode-channel-string type="string"/>
			<ams-carpaint-falloff-amount type="float">0.8000</ams-carpaint-falloff-amount>
			<ams-carpaint-falloff-amount-subnode-on type="bool">true</ams-carpaint-falloff-amount-subnode-on>
			<ams-carpaint-falloff-amount-subnode-amount type="float">1.0000</ams-carpaint-falloff-amount-subnode-amount>
			<ams-carpaint-falloff-amount-subnode-channel-mode type="string">default</ams-carpaint-falloff-amount-subnode-channel-mode>
			<ams-carpaint-falloff-amount-subnode-channel-string type="string"/>
			<ams-carpaint-ior type="float">2.5000</ams-carpaint-ior>
			<ams-carpaint-ior-subnode-on type="bool">true</ams-carpaint-ior-subnode-on>
			<ams-carpaint-ior-subnode-amount type="float">1.0000</ams-carpaint-ior-subnode-amount>
			<ams-carpaint-ior-subnode-channel-mode type="string">default</ams-carpaint-ior-subnode-channel-mode>
			<ams-carpaint-ior-subnode-channel-string type="string"/>
			<ams-carpaint-candy-color type="color">0,0.0784313753247261,0.658823549747467,1</ams-carpaint-candy-color>
			<ams-carpaint-candy-color-subnode-on type="bool">true</ams-carpaint-candy-color-subnode-on>
			<ams-carpaint-candy-color-subnode-amount type="float">1.0000</ams-carpaint-candy-color-subnode-amount>
			<ams-carpaint-candy-color-subnode-channel-mode type="string">default</ams-carpaint-candy-color-subnode-channel-mode>
			<ams-carpaint-candy-color-subnode-channel-string type="string"/>
			<ams-carpaint-candy-bias type="float">0.2000</ams-carpaint-candy-bias>
			<ams-carpaint-candy-bias-subnode-on type="bool">true</ams-carpaint-candy-bias-subnode-on>
			<ams-carpaint-candy-bias-subnode-amount type="float">1.0000</ams-carpaint-candy-bias-subnode-amount>
			<ams-carpaint-candy-bias-subnode-channel-mode type="string">default</ams-carpaint-candy-bias-subnode-channel-mode>
			<ams-carpaint-candy-bias-subnode-channel-string type="string"/>
			<ams-carpaint-flake-color type="color">0.666666686534882,0,0.674509823322296,1</ams-carpaint-flake-color>
			<ams-carpaint-flake-color-subnode-on type="bool">true</ams-carpaint-flake-color-subnode-on>
			<ams-carpaint-flake-color-subnode-amount type="float">1.0000</ams-carpaint-flake-color-subnode-amount>
			<ams-carpaint-flake-color-subnode-channel-mode type="string">default</ams-carpaint-flake-color-subnode-channel-mode>
			<ams-carpaint-flake-color-subnode-channel-string type="string"/>
			<ams-carpaint-flake-size type="float">0.2000</ams-carpaint-flake-size>
			<ams-carpaint-flake-size-subnode-on type="bool">true</ams-carpaint-flake-size-subnode-on>
			<ams-carpaint-flake-size-subnode-amount type="float">1.0000</ams-carpaint-flake-size-subnode-amount>
			<ams-carpaint-flake-size-subnode-channel-mode type="string">default</ams-carpaint-flake-size-subnode-channel-mode>
			<ams-carpaint-flake-size-subnode-channel-string type="string"/>
			<ams-carpaint-flake-amount type="float">0.2000</ams-carpaint-flake-amount>
			<ams-carpaint-flake-amount-subnode-on type="bool">true</ams-carpaint-flake-amount-subnode-on>
			<ams-carpaint-flake-amount-subnode-amount type="float">1.0000</ams-carpaint-flake-amount-subnode-amount>
			<ams-carpaint-flake-amount-subnode-channel-mode type="string">default</ams-carpaint-flake-amount-subnode-channel-mode>
			<ams-carpaint-flake-amount-subnode-channel-string type="string"/>
			<ams-carpaint-flake-bias type="float">0.2000</ams-carpaint-flake-bias>
			<ams-carpaint-flake-bias-subnode-on type="bool">true</ams-carpaint-flake-bias-subnode-on>
			<ams-carpaint-flake-bias-subnode-amount type="float">1.0000</ams-carpaint-flake-bias-subnode-amount>
			<ams-carpaint-flake-bias-subnode-channel-mode type="string">default</ams-carpaint-flake-bias-subnode-channel-mode>
			<ams-carpaint-flake-bias-subnode-channel-string type="string"/>
			<ams-carpaint-flake-spread type="float">0.2000</ams-carpaint-flake-spread>
			<ams-carpaint-flake-spread-subnode-on type="bool">true</ams-carpaint-flake-spread-subnode-on>
			<ams-carpaint-flake-spread-subnode-amount type="float">1.0000</ams-carpaint-flake-spread-subnode-amount>
			<ams-carpaint-flake-spread-subnode-channel-mode type="string">default</ams-carpaint-flake-spread-subnode-channel-mode>
			<ams-carpaint-flake-spread-subnode-channel-string type="string"/>
		</parameters>
		<simulation>
			<ambient type="color">0,0,0,1</ambient>
			<diffuse type="color">0,0.0784313753247261,0.658823549747467,1</diffuse>
			<emission type="color">0,0,0,0</emission>
			<specular type="color">0.800000011920929,0.800000011920929,0.800000011920929,1</specular>
			<reflection type="color">1,1,1,0</reflection>
			<transparent type="color">0.501960813999176,0.501960813999176,0.501960813999176,0</transparent>
			<shine type="double">0.5</shine>
			<transparency type="double">0</transparency>
			<reflectivity type="double">0</reflectivity>
			<ior type="double">1</ior>
		</simulation>
		<material type-name="BrShader_FresnelBlend" render-engine-id="66D400A8-0D44-4511-A9D6-613A4B6E0371" type-id="42725368-6164-6572-5F46-72655C8DDE30" notes="" child-slot-name="ams-reflect-color">
			<parameters>
				<inColor1 type="color">0.23137255012989,0.23137255012989,0.23137255012989,1
					<texture-on type="bool">true</texture-on>
					<texture-amount type="float">1.0000</texture-amount>
					<channel-mode type="int">0</channel-mode>
					<channel-string type="string"/>
				</inColor1>
				<inColor2 type="color">1,1,1,1
					<texture-on type="bool">true</texture-on>
					<texture-amount type="float">1.0000</texture-amount>
					<channel-mode type="int">0</channel-mode>
					<channel-string type="string"/>
				</inColor2>
				<inIOR type="float">1.6000
					<texture-on type="bool">true</texture-on>
					<texture-amount type="float">1.0000</texture-amount>
					<channel-mode type="int">0</channel-mode>
					<channel-string type="string"/>
				</inIOR>
			</parameters>
			<simulation>
				<ambient type="color">0,0,0,0</ambient>
				<diffuse type="color">0.501960813999176,0.501960813999176,0.501960813999176,0</diffuse>
				<emission type="color">0,0,0,0</emission>
				<specular type="color">1,1,1,0</specular>
				<reflection type="color">1,1,1,0</reflection>
				<transparent type="color">0.501960813999176,0.501960813999176,0.501960813999176,0</transparent>
				<shine type="double">0</shine>
				<transparency type="double">0</transparency>
				<reflectivity type="double">0</reflectivity>
				<ior type="double">1</ior>
			</simulation>
		</material>
	</material>
	<meta-data>
		<renderer-name>Brazil for Rhino</renderer-name>
	</meta-data>
	<embedded-files/>
	<thumbnail width="96" height="96" format="dib" original-size="36904" compressed-size="14029" compression="zlib" encoding="base64">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</thumbnail>
</xml>
