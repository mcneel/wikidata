<xml>
	<material type-name="BrShader_BrazilAdvanced" render-engine-id="66D400A8-0D44-4511-A9D6-613A4B6E0371" type-id="D0893922-D6DD-4241-AC51-1CEA1D1F43A1" notes="">
		<parameters>
			<base-2-sided-on type="int">2</base-2-sided-on>
			<base-facemap-on type="bool">false</base-facemap-on>
			<base-faceted-on type="bool">false</base-faceted-on>
			<base-transparent-shadows-on type="bool">true</base-transparent-shadows-on>
			<base-use-os-as-tx-on type="bool">false</base-use-os-as-tx-on>
			<base-env-override type="bool">false</base-env-override>
			<base-extra-light-color type="color">0,0,0,1</base-extra-light-color>
			<base-extra-light-color-subnode-on type="bool">true</base-extra-light-color-subnode-on>
			<base-extra-light-color-subnode-amount type="float">1.0000</base-extra-light-color-subnode-amount>
			<base-extra-light-color-subnode-channel-mode type="string">default</base-extra-light-color-subnode-channel-mode>
			<base-extra-light-color-subnode-channel-string type="string"/>
			<base-ld-map type="float">0.0000</base-ld-map>
			<base-ld-map-subnode-on type="bool">true</base-ld-map-subnode-on>
			<base-ld-map-subnode-amount type="float">1.0000</base-ld-map-subnode-amount>
			<base-ld-map-subnode-channel-mode type="string">default</base-ld-map-subnode-channel-mode>
			<base-ld-map-subnode-channel-string type="string"/>
			<base-bump-map-subnode-on type="bool">true</base-bump-map-subnode-on>
			<base-bump-map-subnode-amount type="float">1.0000</base-bump-map-subnode-amount>
			<base-bump-map-subnode-channel-mode type="string">default</base-bump-map-subnode-channel-mode>
			<base-bump-map-subnode-channel-string type="string"/>
			<base-diffusion-map type="float">0.5000</base-diffusion-map>
			<base-diffusion-map-subnode-on type="bool">true</base-diffusion-map-subnode-on>
			<base-diffusion-map-subnode-amount type="float">1.0000</base-diffusion-map-subnode-amount>
			<base-diffusion-map-subnode-channel-mode type="string">default</base-diffusion-map-subnode-channel-mode>
			<base-diffusion-map-subnode-channel-string type="string"/>
			<highlight-amount type="float">1.0000</highlight-amount>
			<base-shader type="string">default</base-shader>
			<base-shader-hack type="color">0,0,0,1</base-shader-hack>
			<highlight-shader type="string">phong</highlight-shader>
			<highlight-mode type="string">normal</highlight-mode>
			<highlight-shader-hack type="color">0,0,0,1</highlight-shader-hack>
			<reflection-env-on type="bool">false</reflection-env-on>
			<reflection-env-color type="color">0,0,0,1</reflection-env-color>
			<reflection-env-color-subnode-on type="bool">true</reflection-env-color-subnode-on>
			<reflection-env-color-subnode-amount type="float">1.0000</reflection-env-color-subnode-amount>
			<reflection-env-color-subnode-channel-mode type="string">default</reflection-env-color-subnode-channel-mode>
			<reflection-env-color-subnode-channel-string type="string"/>
			<reflection-generate-caustics-on type="bool">true</reflection-generate-caustics-on>
			<reflection-prevent-ir-on type="bool">true</reflection-prevent-ir-on>
			<reflection-glossiness-on type="bool">true</reflection-glossiness-on>
			<reflection-adaptive-on type="bool">true</reflection-adaptive-on>
			<reflection-sample-rate type="int">5</reflection-sample-rate>
			<reflection-max-error type="float">0.0100</reflection-max-error>
			<reflection-decay-on type="bool">false</reflection-decay-on>
			<reflection-decay-color type="color">0,0,0,1</reflection-decay-color>
			<reflection-decay-start units="meters" type="float">0.0000</reflection-decay-start>
			<reflection-decay-end units="meters" type="float">30.4800</reflection-decay-end>
			<reflection-decay-environment type="float">1.0000</reflection-decay-environment>
			<reflection-gloss-focus type="float">0.9500</reflection-gloss-focus>
			<reflection-gloss-focus-subnode-on type="bool">true</reflection-gloss-focus-subnode-on>
			<reflection-gloss-focus-subnode-amount type="float">1.0000</reflection-gloss-focus-subnode-amount>
			<reflection-gloss-focus-subnode-channel-mode type="string">default</reflection-gloss-focus-subnode-channel-mode>
			<reflection-gloss-focus-subnode-channel-string type="string"/>
			<reflection-exclude type="string"/>
			<reflection-mode type="string">ray-traced</reflection-mode>
			<reflection-fade-mode type="string">environment</reflection-fade-mode>
			<reflection-decay-type type="string">linear</reflection-decay-type>
			<reflection-glossiness-mode type="string">angular</reflection-glossiness-mode>
			<refraction-env-on type="bool">false</refraction-env-on>
			<refraction-env-color type="color">0,0,0,1</refraction-env-color>
			<refraction-env-color-subnode-on type="bool">true</refraction-env-color-subnode-on>
			<refraction-env-color-subnode-amount type="float">1.0000</refraction-env-color-subnode-amount>
			<refraction-env-color-subnode-channel-mode type="string">default</refraction-env-color-subnode-channel-mode>
			<refraction-env-color-subnode-channel-string type="string"/>
			<refraction-generate-caustics-on type="bool">true</refraction-generate-caustics-on>
			<refraction-dc-enable-on type="bool">false</refraction-dc-enable-on>
			<refraction-glossiness-on type="bool">false</refraction-glossiness-on>
			<refraction-adaptive-on type="bool">true</refraction-adaptive-on>
			<refraction-sample-rate type="int">10</refraction-sample-rate>
			<refraction-max-error type="float">0.0100</refraction-max-error>
			<refraction-ac-enable-on type="bool">false</refraction-ac-enable-on>
			<refraction-start units="meters" type="float">0.0000</refraction-start>
			<refraction-end units="meters" type="float">30.4800</refraction-end>
			<refraction-ior-variance type="float">0.1000</refraction-ior-variance>
			<refraction-spectral-steps type="int">6</refraction-spectral-steps>
			<refraction-red type="float">0.1000</refraction-red>
			<refraction-green type="float">0.1000</refraction-green>
			<refraction-blue type="float">0.1000</refraction-blue>
			<refraction-gloss-focus type="float">80.0000</refraction-gloss-focus>
			<refraction-gloss-focus-subnode-on type="bool">true</refraction-gloss-focus-subnode-on>
			<refraction-gloss-focus-subnode-amount type="float">1.0000</refraction-gloss-focus-subnode-amount>
			<refraction-gloss-focus-subnode-channel-mode type="string">default</refraction-gloss-focus-subnode-channel-mode>
			<refraction-gloss-focus-subnode-channel-string type="string"/>
			<refraction-color type="color">0,0,0,1</refraction-color>
			<refraction-color-subnode-on type="bool">true</refraction-color-subnode-on>
			<refraction-color-subnode-amount type="float">1.0000</refraction-color-subnode-amount>
			<refraction-color-subnode-channel-mode type="string">default</refraction-color-subnode-channel-mode>
			<refraction-color-subnode-channel-string type="string"/>
			<reflection-custom-curve-data type="string">&lt;xml&gt;&lt;graph tan-scale=&quot;0.2&quot;&gt;&lt;curve enabled=&quot;true&quot; thickness=&quot;2&quot; color=&quot;0.901960784313726,0,0,1&quot; uuid=&quot;&quot;&gt;&lt;pt lock-rotation-on=&quot;true&quot; lock-magnitude-on=&quot;true&quot; length-ratio=&quot;1&quot; locked-angle=&quot;3.14159265358979&quot; uuid=&quot;&quot; x=&quot;0&quot; y=&quot;0&quot;&gt;&lt;tan-in type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;-0.05&quot; y=&quot;-0.05&quot;/&gt;&lt;tan-out type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;0.05&quot; y=&quot;0.05&quot;/&gt;&lt;/pt&gt;&lt;pt lock-rotation-on=&quot;true&quot; lock-magnitude-on=&quot;true&quot; length-ratio=&quot;1&quot; locked-angle=&quot;3.14159265358979&quot; uuid=&quot;&quot; x=&quot;1&quot; y=&quot;1&quot;&gt;&lt;tan-in type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;-0.05&quot; y=&quot;-0.05&quot;/&gt;&lt;tan-out type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;0.05&quot; y=&quot;0.05&quot;/&gt;&lt;/pt&gt;&lt;/curve&gt;&lt;curve enabled=&quot;true&quot; thickness=&quot;1.9&quot; color=&quot;0,0.501960784313725,0,1&quot; uuid=&quot;&quot;&gt;&lt;pt lock-rotation-on=&quot;true&quot; lock-magnitude-on=&quot;true&quot; length-ratio=&quot;1&quot; locked-angle=&quot;3.14159265358979&quot; uuid=&quot;&quot; x=&quot;0&quot; y=&quot;0&quot;&gt;&lt;tan-in type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;-0.05&quot; y=&quot;-0.05&quot;/&gt;&lt;tan-out type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;0.05&quot; y=&quot;0.05&quot;/&gt;&lt;/pt&gt;&lt;pt lock-rotation-on=&quot;true&quot; lock-magnitude-on=&quot;true&quot; length-ratio=&quot;1&quot; locked-angle=&quot;3.14159265358979&quot; uuid=&quot;&quot; x=&quot;1&quot; y=&quot;1&quot;&gt;&lt;tan-in type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;-0.05&quot; y=&quot;-0.05&quot;/&gt;&lt;tan-out type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;0.05&quot; y=&quot;0.05&quot;/&gt;&lt;/pt&gt;&lt;/curve&gt;&lt;curve enabled=&quot;true&quot; thickness=&quot;1.8&quot; color=&quot;0,0.313725490196078,0.784313725490196,1&quot; uuid=&quot;&quot;&gt;&lt;pt lock-rotation-on=&quot;true&quot; lock-magnitude-on=&quot;true&quot; length-ratio=&quot;1&quot; locked-angle=&quot;3.14159265358979&quot; uuid=&quot;&quot; x=&quot;0&quot; y=&quot;0&quot;&gt;&lt;tan-in type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;-0.05&quot; y=&quot;-0.05&quot;/&gt;&lt;tan-out type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;0.05&quot; y=&quot;0.05&quot;/&gt;&lt;/pt&gt;&lt;pt lock-rotation-on=&quot;true&quot; lock-magnitude-on=&quot;true&quot; length-ratio=&quot;1&quot; locked-angle=&quot;3.14159265358979&quot; uuid=&quot;&quot; x=&quot;1&quot; y=&quot;1&quot;&gt;&lt;tan-in type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;-0.05&quot; y=&quot;-0.05&quot;/&gt;&lt;tan-out type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;0.05&quot; y=&quot;0.05&quot;/&gt;&lt;/pt&gt;&lt;/curve&gt;&lt;/graph&gt;&lt;/xml&gt;</reflection-custom-curve-data>
			<refraction-custom-curve-data type="string">&lt;xml&gt;&lt;graph tan-scale=&quot;0.2&quot;&gt;&lt;curve enabled=&quot;true&quot; thickness=&quot;2&quot; color=&quot;0.901960784313726,0,0,1&quot; uuid=&quot;&quot;&gt;&lt;pt lock-rotation-on=&quot;true&quot; lock-magnitude-on=&quot;true&quot; length-ratio=&quot;1&quot; locked-angle=&quot;3.14159265358979&quot; uuid=&quot;&quot; x=&quot;0&quot; y=&quot;0&quot;&gt;&lt;tan-in type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;-0.05&quot; y=&quot;-0.05&quot;/&gt;&lt;tan-out type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;0.05&quot; y=&quot;0.05&quot;/&gt;&lt;/pt&gt;&lt;pt lock-rotation-on=&quot;true&quot; lock-magnitude-on=&quot;true&quot; length-ratio=&quot;1&quot; locked-angle=&quot;3.14159265358979&quot; uuid=&quot;&quot; x=&quot;1&quot; y=&quot;1&quot;&gt;&lt;tan-in type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;-0.05&quot; y=&quot;-0.05&quot;/&gt;&lt;tan-out type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;0.05&quot; y=&quot;0.05&quot;/&gt;&lt;/pt&gt;&lt;/curve&gt;&lt;curve enabled=&quot;true&quot; thickness=&quot;1.9&quot; color=&quot;0,0.501960784313725,0,1&quot; uuid=&quot;&quot;&gt;&lt;pt lock-rotation-on=&quot;true&quot; lock-magnitude-on=&quot;true&quot; length-ratio=&quot;1&quot; locked-angle=&quot;3.14159265358979&quot; uuid=&quot;&quot; x=&quot;0&quot; y=&quot;0&quot;&gt;&lt;tan-in type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;-0.05&quot; y=&quot;-0.05&quot;/&gt;&lt;tan-out type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;0.05&quot; y=&quot;0.05&quot;/&gt;&lt;/pt&gt;&lt;pt lock-rotation-on=&quot;true&quot; lock-magnitude-on=&quot;true&quot; length-ratio=&quot;1&quot; locked-angle=&quot;3.14159265358979&quot; uuid=&quot;&quot; x=&quot;1&quot; y=&quot;1&quot;&gt;&lt;tan-in type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;-0.05&quot; y=&quot;-0.05&quot;/&gt;&lt;tan-out type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;0.05&quot; y=&quot;0.05&quot;/&gt;&lt;/pt&gt;&lt;/curve&gt;&lt;curve enabled=&quot;true&quot; thickness=&quot;1.8&quot; color=&quot;0,0.313725490196078,0.784313725490196,1&quot; uuid=&quot;&quot;&gt;&lt;pt lock-rotation-on=&quot;true&quot; lock-magnitude-on=&quot;true&quot; length-ratio=&quot;1&quot; locked-angle=&quot;3.14159265358979&quot; uuid=&quot;&quot; x=&quot;0&quot; y=&quot;0&quot;&gt;&lt;tan-in type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;-0.05&quot; y=&quot;-0.05&quot;/&gt;&lt;tan-out type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;0.05&quot; y=&quot;0.05&quot;/&gt;&lt;/pt&gt;&lt;pt lock-rotation-on=&quot;true&quot; lock-magnitude-on=&quot;true&quot; length-ratio=&quot;1&quot; locked-angle=&quot;3.14159265358979&quot; uuid=&quot;&quot; x=&quot;1&quot; y=&quot;1&quot;&gt;&lt;tan-in type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;-0.05&quot; y=&quot;-0.05&quot;/&gt;&lt;tan-out type=&quot;custom&quot; tension=&quot;0.2&quot; bias=&quot;1&quot; continuity=&quot;0.5&quot; uuid=&quot;&quot; x=&quot;0.05&quot; y=&quot;0.05&quot;/&gt;&lt;/pt&gt;&lt;/curve&gt;&lt;/graph&gt;&lt;/xml&gt;</refraction-custom-curve-data>
			<refraction-exclude type="string"/>
			<refraction-mode type="string">ray-traced</refraction-mode>
			<refraction-absorption-type type="string">exponential</refraction-absorption-type>
			<refraction-glossiness-mode type="string">angular</refraction-glossiness-mode>
			<refraction-spectra-type type="string">xyz</refraction-spectra-type>
			<ams-refract-on type="bool">true</ams-refract-on>
			<ams-ambient-color type="color">0,0,0,1</ams-ambient-color>
			<ams-ambient-color-subnode-on type="bool">true</ams-ambient-color-subnode-on>
			<ams-ambient-color-subnode-amount type="float">1.0000</ams-ambient-color-subnode-amount>
			<ams-ambient-color-subnode-channel-mode type="string">default</ams-ambient-color-subnode-channel-mode>
			<ams-ambient-color-subnode-channel-string type="string"/>
			<ams-diffuse-color type="color">0.772549033164978,0.811764717102051,0.839215695858002,1</ams-diffuse-color>
			<ams-diffuse-color-subnode-on type="bool">true</ams-diffuse-color-subnode-on>
			<ams-diffuse-color-subnode-amount type="float">1.0000</ams-diffuse-color-subnode-amount>
			<ams-diffuse-color-subnode-channel-mode type="string">default</ams-diffuse-color-subnode-channel-mode>
			<ams-diffuse-color-subnode-channel-string type="string"/>
			<ams-luminosity-color type="color">0,0,0,1</ams-luminosity-color>
			<ams-luminosity-color-subnode-on type="bool">true</ams-luminosity-color-subnode-on>
			<ams-luminosity-color-subnode-amount type="float">1.0000</ams-luminosity-color-subnode-amount>
			<ams-luminosity-color-subnode-channel-mode type="string">default</ams-luminosity-color-subnode-channel-mode>
			<ams-luminosity-color-subnode-channel-string type="string"/>
			<ams-ambient-amount type="float">1.0000</ams-ambient-amount>
			<ams-ambient-amount-subnode-on type="bool">true</ams-ambient-amount-subnode-on>
			<ams-ambient-amount-subnode-amount type="float">1.0000</ams-ambient-amount-subnode-amount>
			<ams-ambient-amount-subnode-channel-mode type="string">default</ams-ambient-amount-subnode-channel-mode>
			<ams-ambient-amount-subnode-channel-string type="string"/>
			<ams-diffuse-amount type="float">1.0000</ams-diffuse-amount>
			<ams-diffuse-amount-subnode-on type="bool">true</ams-diffuse-amount-subnode-on>
			<ams-diffuse-amount-subnode-amount type="float">1.0000</ams-diffuse-amount-subnode-amount>
			<ams-diffuse-amount-subnode-channel-mode type="string">default</ams-diffuse-amount-subnode-channel-mode>
			<ams-diffuse-amount-subnode-channel-string type="string"/>
			<ams-luminosity-amount type="float">1.0000</ams-luminosity-amount>
			<ams-luminosity-amount-subnode-on type="bool">true</ams-luminosity-amount-subnode-on>
			<ams-luminosity-amount-subnode-amount type="float">1.0000</ams-luminosity-amount-subnode-amount>
			<ams-luminosity-amount-subnode-channel-mode type="string">default</ams-luminosity-amount-subnode-channel-mode>
			<ams-luminosity-amount-subnode-channel-string type="string"/>
			<ams-opacity-color type="color">1,1,1,1</ams-opacity-color>
			<ams-opacity-color-subnode-on type="bool">true</ams-opacity-color-subnode-on>
			<ams-opacity-color-subnode-amount type="float">1.0000</ams-opacity-color-subnode-amount>
			<ams-opacity-color-subnode-channel-mode type="string">default</ams-opacity-color-subnode-channel-mode>
			<ams-opacity-color-subnode-channel-string type="string"/>
			<ams-default-ior type="float">1.5500</ams-default-ior>
			<ams-default-ior-subnode-on type="bool">true</ams-default-ior-subnode-on>
			<ams-default-ior-subnode-amount type="float">1.0000</ams-default-ior-subnode-amount>
			<ams-default-ior-subnode-channel-mode type="string">default</ams-default-ior-subnode-channel-mode>
			<ams-default-ior-subnode-channel-string type="string"/>
			<ams-reflect-color type="color">0,0,0,1</ams-reflect-color>
			<ams-reflect-color-subnode-on type="bool">true</ams-reflect-color-subnode-on>
			<ams-reflect-color-subnode-amount type="float">1.0000</ams-reflect-color-subnode-amount>
			<ams-reflect-color-subnode-channel-mode type="string">default</ams-reflect-color-subnode-channel-mode>
			<ams-reflect-color-subnode-channel-string type="string"/>
			<ams-reflect-tint-color type="color">1,1,1,1</ams-reflect-tint-color>
			<ams-reflect-tint-color-subnode-on type="bool">true</ams-reflect-tint-color-subnode-on>
			<ams-reflect-tint-color-subnode-amount type="float">1.0000</ams-reflect-tint-color-subnode-amount>
			<ams-reflect-tint-color-subnode-channel-mode type="string">default</ams-reflect-tint-color-subnode-channel-mode>
			<ams-reflect-tint-color-subnode-channel-string type="string"/>
			<ams-reflect-comp-mode type="string">blend</ams-reflect-comp-mode>
			<ams-reflectivity-amount type="float">1.0000</ams-reflectivity-amount>
			<ams-reflectivity-amount-subnode-on type="bool">true</ams-reflectivity-amount-subnode-on>
			<ams-reflectivity-amount-subnode-amount type="float">1.0000</ams-reflectivity-amount-subnode-amount>
			<ams-reflectivity-amount-subnode-channel-mode type="string">default</ams-reflectivity-amount-subnode-channel-mode>
			<ams-reflectivity-amount-subnode-channel-string type="string"/>
			<hl-ams-specular-color type="color">1,1,1,1</hl-ams-specular-color>
			<hl-ams-specular-color-subnode-on type="bool">true</hl-ams-specular-color-subnode-on>
			<hl-ams-specular-color-subnode-amount type="float">1.0000</hl-ams-specular-color-subnode-amount>
			<hl-ams-specular-color-subnode-channel-mode type="string">default</hl-ams-specular-color-subnode-channel-mode>
			<hl-ams-specular-color-subnode-channel-string type="string"/>
			<hl-ams-specular-level type="float">0.8000</hl-ams-specular-level>
			<hl-ams-specular-level-subnode-on type="bool">true</hl-ams-specular-level-subnode-on>
			<hl-ams-specular-level-subnode-amount type="float">1.0000</hl-ams-specular-level-subnode-amount>
			<hl-ams-specular-level-subnode-channel-mode type="string">default</hl-ams-specular-level-subnode-channel-mode>
			<hl-ams-specular-level-subnode-channel-string type="string"/>
			<hl-ams-glossiness type="float">0.5000</hl-ams-glossiness>
			<hl-ams-glossiness-subnode-on type="bool">true</hl-ams-glossiness-subnode-on>
			<hl-ams-glossiness-subnode-amount type="float">1.0000</hl-ams-glossiness-subnode-amount>
			<hl-ams-glossiness-subnode-channel-mode type="string">default</hl-ams-glossiness-subnode-channel-mode>
			<hl-ams-glossiness-subnode-channel-string type="string"/>
			<hl-ams-soften type="float">0.1000</hl-ams-soften>
			<hl-ams-soften-subnode-on type="bool">true</hl-ams-soften-subnode-on>
			<hl-ams-soften-subnode-amount type="float">1.0000</hl-ams-soften-subnode-amount>
			<hl-ams-soften-subnode-channel-mode type="string">default</hl-ams-soften-subnode-channel-mode>
			<hl-ams-soften-subnode-channel-string type="string"/>
			<hl-ams-gain type="float">0.5000</hl-ams-gain>
			<hl-ams-gain-subnode-on type="bool">true</hl-ams-gain-subnode-on>
			<hl-ams-gain-subnode-amount type="float">1.0000</hl-ams-gain-subnode-amount>
			<hl-ams-gain-subnode-channel-mode type="string">default</hl-ams-gain-subnode-channel-mode>
			<hl-ams-gain-subnode-channel-string type="string"/>
			<hl-ams-area-speculars-on type="bool">false</hl-ams-area-speculars-on>
		</parameters>
		<simulation>
			<ambient type="color">0,0,0,1</ambient>
			<diffuse type="color">0.772549033164978,0.811764717102051,0.839215695858002,1</diffuse>
			<emission type="color">0,0,0,1</emission>
			<specular type="color">0.800000011920929,0.800000011920929,0.800000011920929,1</specular>
			<reflection type="color">1,1,1,0</reflection>
			<transparent type="color">1,1,1,1</transparent>
			<shine type="double">0.5</shine>
			<transparency type="double">0</transparency>
			<reflectivity type="double">0</reflectivity>
			<ior type="double">1</ior>
		</simulation>
		<material type-name="BrShader_FresnelBlend" render-engine-id="66D400A8-0D44-4511-A9D6-613A4B6E0371" type-id="42725368-6164-6572-5F46-72655C8DDE30" notes="" child-slot-name="ams-reflect-color">
			<parameters>
				<inColor1 type="color">1,1,1,1
					<texture-on type="bool">true</texture-on>
					<texture-amount type="float">1.0000</texture-amount>
					<channel-mode type="int">0</channel-mode>
					<channel-string type="string"/>
				</inColor1>
				<inColor2 type="color">0,0,0,1
					<texture-on type="bool">true</texture-on>
					<texture-amount type="float">1.0000</texture-amount>
					<channel-mode type="int">0</channel-mode>
					<channel-string type="string"/>
				</inColor2>
				<inIOR type="float">6.0000
					<texture-on type="bool">true</texture-on>
					<texture-amount type="float">1.0000</texture-amount>
					<channel-mode type="int">0</channel-mode>
					<channel-string type="string"/>
				</inIOR>
			</parameters>
			<simulation>
				<ambient type="color">0,0,0,0</ambient>
				<diffuse type="color">0.501960813999176,0.501960813999176,0.501960813999176,0</diffuse>
				<emission type="color">0,0,0,0</emission>
				<specular type="color">1,1,1,0</specular>
				<reflection type="color">1,1,1,0</reflection>
				<transparent type="color">0.501960813999176,0.501960813999176,0.501960813999176,0</transparent>
				<shine type="double">0</shine>
				<transparency type="double">0</transparency>
				<reflectivity type="double">0</reflectivity>
				<ior type="double">1</ior>
			</simulation>
		</material>
	</material>
	<meta-data>
		<renderer-name>Brazil for Rhino</renderer-name>
	</meta-data>
	<embedded-files/>
	<thumbnail width="96" height="96" format="dib" original-size="27688" compressed-size="10655" compression="zlib" encoding="base64"></thumbnail>
</xml>
