======Rhino C++ Plug-in SDK FAQ======
> **Developer:** //[[developer:cplusplusplugins|C++]]//
> **Summary:** //Frequently ask questions regarding the Rhino C++ SDK.//

  - [[#What development tools to I need to create plug-ins using the Rhino C++ SDK?]]
  - [[#Can I use Visual C++ 2012 or 2013 to build C++ plug-ins for Rhino?]]
  - [[#Can I use Windows 8 as a platform for building plug-ins for Rhino?]]
  - [[#What documentation is available for developing plug-ins?]]
  - [[#Is developer training available for the Rhino SDK?]]
  - [[#What products have been developed with the Rhino SDK?]]

=====1. What development tools to I need to create plug-ins using the Rhino C++ SDK?=====
  * To create plug-ins for Rhino 5.0 64-bit, you will need Microsoft Visual C++ 2010.
  * To create plug-ins for Rhino 5.0 32-bit, you will need Microsoft Visual C++ 2005.
  * To create plug-ins for Rhino 4.0, you will need Microsoft Visual C++ 2005.

Note: you cannot create plug-ins for Rhino using the free Express Editions of Microsoft Visual C++, as they do not come with the Microsoft Foundation Class (MFC) libraries.

=====2. Can I use Visual C++ 2012 or 2013 to build C++ plug-ins for Rhino?=====
No, you must use the versions of Microsoft Visual C++ noted above. Microsoft Visual C++ 2012 comes with a newer version of MFC, which is incompatible to the version used by Rhino. Your plug-in project is required to link with the same version of the MFC libraries as Rhino.

=====3. Can I use Windows 8 as a platform for building plug-ins for Rhino?=====
Visual C++ 2010 installed and operates as expected on Windows 8. But, Visual C++ 2005 will not install on Windows 8. Thus, although it is possible create plug-ins for Rhino 5.0 64-bit on Windows 8, it is not possible to build plug-ins for Rhino 5.0 32-bit or Rhino 4.0. 

With this said, it might be possible to run a Visual C++ 2005-compatible operating system on Windows 8 with a virtualization product such as [[http://www.vmware.com/|VMWare]], thus making it possible to build plug-ins for Rhino 5.0 32-bit or Rhino 4.0.

=====4. What documentation is available for developing plug-ins?=====
HTML help documentation, included with the Rhino SDK, provides detailed information on SDK classes and their hierarchy. Also, there is a substantial amount of information in the Rhino C++ [[developer:sdksamples:knowledgebasecpp|SDK Knowledge Base]]. And, the Rhino C++ [[https://github.com/mcneel/Rhino5Samples_CPP|SDK Samples]] contain a number of useful sample plug-in project that demonstrate a variety of capabilities.
=====5. Is developer training available for the Rhino SDK?=====
Rhino SDK training is available in either Seattle, Washington (US) or Barcelona, Spain. Our SDK training is very much like consulting in that it is customized for the audience - we do not follow a preset agenda and we do not sit in a classroom and lecture. It should be mentioned that very few of our 3rd party developers have had SDK training, which is hopefully testament to the SDK and our developer support. Those who do end up coming here for training have already spent time with the SDK. Thus, we spend our time addressing specific questions and problems.

//[[http://developer.rhino3d.com/training/|More information...]]//

=====6. What products have been developed with the Rhino SDK?=====
The products developer for Rhino fall into a variety of categories, including Analysis, CAM, Jewelery, Marine, Reverse Engineering, Rendering, and any many others. You can check out is available for Rhino on our [[http://www.rhino3d.com/resources/|Related Products and Services]] page.

\\

{{tag>Developer cplusplus}}