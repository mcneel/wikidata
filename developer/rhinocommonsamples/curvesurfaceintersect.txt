===== Sample: Curve-Surface Intersection =====

===== C# =====
<code c#>
[System.Runtime.InteropServices.Guid("D3E509D4-3791-42C1-A136-FFBA37359290")]
public class ex_curvesurfaceintersect : Rhino.Commands.Command
{
  public override string EnglishName { get { return "csCrvSrfIntersect"; } }

  protected override Rhino.Commands.Result RunCommand(RhinoDoc doc, Rhino.Commands.RunMode mode)
  {
    var gs = new Rhino.Input.Custom.GetObject();
    gs.SetCommandPrompt("select surface");
    gs.GeometryFilter = Rhino.DocObjects.ObjectType.Surface;
    gs.DisablePreSelect();
    gs.SubObjectSelect = false;
    gs.Get();
    if (gs.CommandResult() != Result.Success)
      return gs.CommandResult();
    var srf = gs.Object(0).Surface();

    var gc = new Rhino.Input.Custom.GetObject();
    gc.SetCommandPrompt("select curve");
    gc.GeometryFilter = Rhino.DocObjects.ObjectType.Curve;
    gc.DisablePreSelect();
    gc.SubObjectSelect = false;
    gc.Get();
    if (gc.CommandResult() != Result.Success)
      return gc.CommandResult();
    var crv = gc.Object(0).Curve();

    if (srf == null || crv == null)
      return Result.Failure;

    var tol = doc.ModelAbsoluteTolerance;

    var cis = Rhino.Geometry.Intersect.Intersection.CurveSurface(crv, srf, tol, tol);
    if (cis != null)
    {
      var addedObjs = new List<Guid>();
      foreach (var ie in cis)
      {
        if (ie.IsOverlap)
        {
          double t0;
          double t1;
          crv.ClosestPoint(ie.PointA, out t0);
          crv.ClosestPoint(ie.PointA2, out t1);
          var overlapCrv = crv.DuplicateCurve().Trim(t0, t1);
          addedObjs.Add(doc.Objects.AddCurve(overlapCrv));
        }
        else // IsPoint
        {
          addedObjs.Add(doc.Objects.AddPoint(ie.PointA));
        }
      }
      if (addedObjs.Count > 0)
        doc.Objects.Select(addedObjs);
    }

    doc.Views.Redraw();

    return Rhino.Commands.Result.Success;
  }
}
</code>
===== VB.NET =====
<code vb>
<System.Runtime.InteropServices.Guid("9376B50C-7F64-43FC-A9EA-D0402D84DF0A")> _
Public Class ex_curvesurfaceintersect
  Inherits Rhino.Commands.Command
  Public Overrides ReadOnly Property EnglishName() As String
    Get
      Return "vbCrvSrfIntersect"
    End Get
  End Property

  Protected Overrides Function RunCommand(doc As RhinoDoc, mode As Rhino.Commands.RunMode) As Rhino.Commands.Result
    Dim gs = New Rhino.Input.Custom.GetObject()
    gs.SetCommandPrompt("select surface")
    gs.GeometryFilter = Rhino.DocObjects.ObjectType.Surface
    gs.DisablePreSelect()
    gs.SubObjectSelect = False
    gs.[Get]()
    If gs.CommandResult() <> Result.Success Then
      Return gs.CommandResult()
    End If
    Dim srf = gs.[Object](0).Surface()

    Dim gc = New Rhino.Input.Custom.GetObject()
    gc.SetCommandPrompt("select curve")
    gc.GeometryFilter = Rhino.DocObjects.ObjectType.Curve
    gc.DisablePreSelect()
    gc.SubObjectSelect = False
    gc.[Get]()
    If gc.CommandResult() <> Result.Success Then
      Return gc.CommandResult()
    End If
    Dim crv = gc.[Object](0).Curve()

    If srf Is Nothing OrElse crv Is Nothing Then
      Return Result.Failure
    End If

    Dim tol = doc.ModelAbsoluteTolerance

    Dim cis = Rhino.Geometry.Intersect.Intersection.CurveSurface(crv, srf, tol, tol)
    If cis IsNot Nothing Then
      Dim addedObjs = New List(Of Guid)()
      For Each ie As IntersectionEvent In cis
        If ie.IsOverlap Then
          Dim t0 As Double
          Dim t1 As Double
          crv.ClosestPoint(ie.PointA, t0)
          crv.ClosestPoint(ie.PointA2, t1)
          Dim overlapCrv = crv.DuplicateCurve().Trim(t0, t1)
          addedObjs.Add(doc.Objects.AddCurve(overlapCrv))
        Else
          ' IsPoint
          addedObjs.Add(doc.Objects.AddPoint(ie.PointA))
        End If
      Next
      If addedObjs.Count > 0 Then
        doc.Objects.[Select](addedObjs)
      End If
    End If

    doc.Views.Redraw()

    Return Rhino.Commands.Result.Success
  End Function
End Class
d Namespace
</code>
===== Python =====
<code python>
import rhinoscriptsyntax as rs
from scriptcontext import *
import Rhino
import System.Collections.Generic as scg
import System as s

def RunCommand():
  srfid = rs.GetObject("select surface", rs.filter.surface | rs.filter.polysurface)
  if not srfid: return
 
  crvid = rs.GetObject("select curve", rs.filter.curve)
  if not crvid: return

  evs = rs.CurveSurfaceIntersection(crvid, srfid)

  if evs:
      addedObjs = []
      for ev in evs:
          if ev[0] == 2: #overlap
              crv = rs.coercecurve(crvid)
              if crv:
                  t0 = crv.ClosestPoint(ev[1])[1]
                  t1 = crv.ClosestPoint(ev[2])[1]
                  overlapCrv = crv.DuplicateCurve().Trim(t0,t1)
                  addedObjs.Add(doc.Objects.AddCurve(overlapCrv))
          else: #point
              addedObjs.Add(doc.Objects.AddPoint(ev[1]))

      if len(addedObjs) > 0:
          doc.Objects.Select.Overloads[scg.IEnumerable[s.Guid]](addedObjs)
  doc.Views.Redraw()

if __name__ == "__main__":
  RunCommand()
</code>

{{tag>Developer rhinocommon}}
