======RhinoMobile - Other Links & Libraries======

[[http://wiki.mcneel.com/developer/rhinomobile|Overview]] | [[http://wiki.mcneel.com/developer/rhinomobile/getting_started|Get Started]] | [[http://wiki.mcneel.com/developer/rhinomobile/hellorhinomobile|HelloRhinoMobile]] | [[http://wiki.mcneel.com/developer/rhinomobile/setup_your_project|Your Project]] | [[http://wiki.mcneel.com/developer/rhinomobile/simulators_and_emulators|Simulators]] | [[http://wiki.mcneel.com/developer/rhinomobile/devices_and_testing|Devices]] | [[http://wiki.mcneel.com/developer/rhinomobile/profiling_and_performance|Profiling]] | Notes
----
=====Developer Resources=====

Xamarin Developer Resources
  * [[http://docs.xamarin.com/guides/|Xamarin Guides]]: The best place to start if you are new to C# Cross-platform development.
  * [[http://docs.xamarin.com/recipes/|Xamarin Recipes]]: Canned, cut-and-paste ready code recipes that provide common functionality.
  * [[https://github.com/mono/monotouch-bindings|MonoTouch bindings]]: A frequently updated set of bindings to popular Objective-C libraries.
  * [[https://github.com/mono/monodroid-bindings|MonoDroid bindings]]: A slightly-less comprehensive set of bindings to Android libraries.
  * [[http://forums.xamarin.com/|Xamarin Forums]]: Ask your questions on Xamarin's official forum.
  * [[http://stackoverflow.com/questions/tagged/xamarin|Stackoverflow Xamarin Tag]]: Many answers to common questions are tagged Xamarin on SO.
  * [[http://shop.oreilly.com/product/0636920024002.do|Mobile Development with C#]] by Greg Shackles. This book is a good introduction and overview.
  * [[http://docs.xamarin.com/guides/ios/advanced_topics/binding_objective-c/objective_sharpie|Objective Sharpie]]: Xamarin's utility for scanning your existing Objective-C libraries and creating automated bindings.

Rhino Development Resources
  * [[http://discourse.mcneel.com/category/rhino-developer/|McNeel Discourse Developer Forum]] The best place to ask and get answers to RhinoCommon questions.
  * [[http://wiki.mcneel.com/developer/rhinocommon|RhinoCommon code samples]]: A great set of code samples are at the bottom of the page.

=====Cross-platform Libraries=====
  * [[http://github.com/koush/sqlite-net|SQLite.NET]]: A cross-platform database library that works on Android, iOS, and WindowsPhone.
  * [[http://github.com/slodge/MvvmCross|MvvmCross]]: Stuart Lodge's fantastic (and well supported) [[http://en.wikipedia.org/wiki/Model_View_ViewModel|Model-View-ViewModel]] (MVVM) library.
  * [[http://github.com/rdio/vernacular|Vernacular]]: Rdio's localization/internationalization toolkit that works well with Xamarin projects.
  * [[https://github.com/paulcbetts/splat|Splat]]: A library to make things cross-platform that should be. 


=====Miscellaneous Notes=====

**Android Development Tools - Where are they installed again?**

Xamarin places the Android tools in a specific path that allows it to work seamlessly from within Xamarin Studio.  However, there are times when it's useful to get access to the SDK platform tools manually.  Here are the default install paths for both Mac and Windows:

**__Mac__**

  * Android NDK path: ///Users/<you>/Library/Developer/Xamarin/android-ndk/android-ndk-r??//
  * Android SDK path: ///Users/<you>/Library/Developer/Xamarin/android-sdk-mac_x86/tools/android//


**__Windows__**

  * Android NDK path: //C:\Program Files\Android\ndk\android-ndk-r??//
  * Android SDK path: //C:\Users\[you]\AppData\Local\Android\android-sdk//


** Xamarin Studio Shortcuts **
   * Command+. = Global Search (class:  line:)
   * Command+F = Find.  You can pin search results.
   * Command+D = Go to Declaration (find where it's declared)
   * Command+Shift+R = Go to References (show all occurrences)
   * Preferences.  Line numbers on.  Enable Source analysis.  Enable code folding, etc.
   * Alt+Enter = Context Actions (Resharper style)
   * Ctrl+Alt+Space = automatically add using directive
   * Alt + Up/Down arrows = take line up or down.
   * Alt + Shift + Up/Down arrows = expand/contract selection around cursor.
   * Debugger options: Debug project only code is on by default.  Switch it off if you want to step into non-project code.