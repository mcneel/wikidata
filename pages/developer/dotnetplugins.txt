====== Rhino.NET Plug-in SDK ======
[[http://wiki.mcneel.com/developer/dotnetplugins|{{:developer:rhino_plugin.png?128|Rhino.NET}}]]

><color red>**WARNING:**</color> Rhino.NET will **NOT** be available in Rhino 6. **Use [[rhinocommon|RhinoCommon]] if possible** 
>[[rhinocommon|RhinoCommon]] is the new .NET plug-in SDK for Rhino 5.

The Rhino.NET SDK is designed to allow .NET developers to create Rhino plug-ins with the same capabilities as Rhino C++ SDK developers.


=====.NET Framework Plug-In Development (Rhino 4 and 5)=====
Rhino ships with the necessary components to enable Rhino.NET plug-ins on users computers. Plug-ins can be created with a compiler that compiles assemblies using .NET 2.0, including:

  * Microsoft Visual C# and Microsoft Visual VB.NET 2005 and 2008 (including [[http://www.microsoft.com/visualstudio/en-us/products/2010-editions/express|Microsoft Visual Studio Express editions]])
  * Microsoft Visual C# and Microsoft Visual VB.NET 2010 are supported on Rhino 5
  * SharpDevelop 2.0 and above

=====What is the Rhino.NET SDK?=====
Rhino.Net SDK helps developers to extend Rhino's functionality  using  'Rhino plug-ins'. The Rhino.NET SDK provides the tools to develop Rhino plug-ins using a .NET programming language. This means that Rhino plug-ins can now be developed using VB.NET, C#, C++.NET, Delphi.NET (and the list goes on).

The Rhino.NET SDK is actually a wrapper around the Rhino C++ SDK. Most of the classes and methods provided by the C++ SDK are available through .NET.

=====Where is the Rhino.NET SDK?=====
The Rhino.NET SDK an assembly named Rhino_DotNET.dll located in the Rhino system directory. The Rhino_DotNET.dll assembly is what all Rhino.NET plug-ins reference to get exported classes and functions from Rhino. This file is installed with Rhino and is not a separate download.

=====Questions=====

Post questions or read other people's questions/answers at http://discourse.mcneel.com/

Some of your questions may be answered by the [[developer:dotnetpluginessentials|DotNET Essentials page]]

=====Rhino.NET SDK Articles=====

{{topic>dotnet}}


=====Rhino.NET SDK Samples=====

**[[http://wiki.mcneel.com/_media/legacy/en/VBDotNetBatchRender.zip|Batch Render with VB]]** - creates a console application that will batch render a folder of 3dm files. Demonstrates how to access [[developer:rhinoscript|RhinoScript]] from an external .NET application.

**[[http://wiki.mcneel.com/_media/legacy/en/BrepSamples_net.zip|BrepSamples]]** - demonstrates how to create a planar face with hole, and how to create a trimmed planar face in C#.

**[[http://wiki.mcneel.com/_media/legacy/en/VBDockingDialog.zip|Docking Dialog with VB]]** - creates a custom user control in VB.NET that works as a dockable dialog in Rhino.

**[[http://wiki.mcneel.com/_media/legacy/en/CsDockingDialog.zip|Docking Dialog with C#]]** - creates a custom user control in C# that works as a dockable dialog in Rhino.

**{{:developer:estimator.zip|Tagging objects with C#}}** - tags objects with estimating data using C#.

**[[http://wiki.mcneel.com/_media/legacy/en/VBObjectWatcher.zip|Event Watcher with VB]]** - create a class that is notified when changes occur in Rhino.

**[[http://wiki.mcneel.com/_media/legacy/en/DotNetExtendObjectProperties.zip|Extend Object Properties with C#]]** - demonstrates how to extend Rhino's Object Properties window.

**[[http://wiki.mcneel.com/_media/legacy/en/TestObjectManager.zip|Object Manager in C#]]** - creates a docking dialog of object uuids that responds to selection events.

**[[http://wiki.mcneel.com/_media/legacy/en/ReadPointFile.zip|Read Points from a Text File in C#]]** - Uses System.IO.StreamReader to read from a text file.

**{{:developer:testexternalaccess.zip|TestExternalAccess}}** - demonstrates how to access COM visible objects in a .NET plug-in from an external application.

**{{:developer:sdksamples:zanalysis.zip|Visual Analysis Mode}}** - demonstrates how to create your own false color analysis mode in with C#.

\\