===== Sample: Mesh Drawing =====

===== C# =====
<code c#>
[System.Runtime.InteropServices.Guid("DE24BC2C-B2E7-4CA1-B2BE-BC0ED742E645")]
public class ex_meshdrawing : Rhino.Commands.Command
{
  public override string EnglishName { get { return "csDrawMesh"; } }

  protected override Rhino.Commands.Result RunCommand(RhinoDoc doc, Rhino.Commands.RunMode mode)
  {
    var gs = new Rhino.Input.Custom.GetObject();
    gs.SetCommandPrompt("select sphere");
    gs.GeometryFilter = Rhino.DocObjects.ObjectType.Surface;
    gs.DisablePreSelect();
    gs.SubObjectSelect = false;
    gs.Get();
    if (gs.CommandResult() != Result.Success)
      return gs.CommandResult();

    Sphere sphere;
    gs.Object(0).Surface().TryGetSphere(out sphere);
    if (sphere.IsValid)
    {
      var mesh = Mesh.CreateFromSphere(sphere, 10, 10);
      if (mesh == null)
        return Result.Failure;

      var conduit = new DrawBlueMeshConduit(mesh);
      conduit.Enabled = true;
      doc.Views.Redraw();

      string inStr = "";
      Rhino.Input.RhinoGet.GetString("press <Enter> to continue", true, ref inStr);

      conduit.Enabled = false;
      doc.Views.Redraw();
      return Rhino.Commands.Result.Success;
    }
    else
      return Rhino.Commands.Result.Failure;
  }
}

class DrawBlueMeshConduit : Rhino.Display.DisplayConduit
{
  Mesh _mesh = null;
  Color _color;
  DisplayMaterial _material = null;
  BoundingBox _bbox;

  public DrawBlueMeshConduit(Mesh mesh)
  {
    // set up as much data as possible so we do the minimum amount of work possible inside
    // the actual display code
    _mesh = mesh;
    _color = System.Drawing.Color.Blue;
    _material = new DisplayMaterial();
    _material.Diffuse = _color;
    if (_mesh != null && _mesh.IsValid)
      _bbox = _mesh.GetBoundingBox(true);
  }

  // this is called every frame inside the drawing code so try to do as little as possible
  // in order to not degrade display speed. Don't create new objects if you don't have to as this
  // will incur an overhead on the heap and garbage collection.
  protected override void CalculateBoundingBox(CalculateBoundingBoxEventArgs e)
  {
    base.CalculateBoundingBox(e);
    // Since we are dynamically drawing geometry, we needed to override
    // CalculateBoundingBox. Otherwise, there is a good chance that our
    // dynamically drawing geometry would get clipped.
 
    // Union the mesh's bbox with the scene's bounding box
    e.BoundingBox.Union(_bbox);
  }

  protected override void PreDrawObjects(DrawEventArgs e)
  {
    base.PreDrawObjects(e);
    var vp = e.Display.Viewport;
    if (vp.DisplayMode.EnglishName.ToLower() == "wireframe")
      e.Display.DrawMeshWires(_mesh, _color);
    else
      e.Display.DrawMeshShaded(_mesh, _material);
  }
}
</code>
===== VB.NET =====
<code vb>
<System.Runtime.InteropServices.Guid("03F2949F-F6BD-42C2-942B-18E22B7F84A1")> _
Public Class ex_meshdrawing
  Inherits Rhino.Commands.Command
  Public Overrides ReadOnly Property EnglishName() As String
    Get
      Return "vbDrawMesh"
    End Get
  End Property

  Protected Overrides Function RunCommand(doc As RhinoDoc, mode As Rhino.Commands.RunMode) As Rhino.Commands.Result
    Dim gs = New Rhino.Input.Custom.GetObject()
    gs.SetCommandPrompt("select sphere")
    gs.GeometryFilter = Rhino.DocObjects.ObjectType.Surface
    gs.DisablePreSelect()
    gs.SubObjectSelect = False
    gs.[Get]()
    If gs.CommandResult() <> Result.Success Then
      Return gs.CommandResult()
    End If

    Dim sphere As Sphere
    gs.[Object](0).Surface().TryGetSphere(sphere)
    If sphere.IsValid Then
      Dim mesh__1 = Mesh.CreateFromSphere(sphere, 10, 10)
      If mesh__1 Is Nothing Then
        Return Result.Failure
      End If

      Dim conduit = New DrawBlueMeshConduit(mesh__1)
      conduit.Enabled = True
      doc.Views.Redraw()

      Dim inStr As String = ""
      Rhino.Input.RhinoGet.GetString("press <Enter> to continue", True, inStr)

      conduit.Enabled = False
      doc.Views.Redraw()
      Return Rhino.Commands.Result.Success
    Else
      Return Rhino.Commands.Result.Failure
    End If
  End Function
End Class

Class DrawBlueMeshConduit
  Inherits Rhino.Display.DisplayConduit
  Private _mesh As Mesh = Nothing
  Private _color As Color
  Private _material As DisplayMaterial = Nothing
  Private _bbox As BoundingBox

  Public Sub New(mesh As Mesh)
    ' set up as much data as possible so we do the minimum amount of work possible inside
    ' the actual display code
    _mesh = mesh
    _color = System.Drawing.Color.Blue
    _material = New DisplayMaterial()
    _material.Diffuse = _color
    If _mesh IsNot Nothing AndAlso _mesh.IsValid Then
      _bbox = _mesh.GetBoundingBox(True)
    End If
  End Sub

  ' this is called every frame inside the drawing code so try to do as little as possible
  ' in order to not degrade display speed. Don't create new objects if you don't have to as this
  ' will incur an overhead on the heap and garbage collection.
  Protected Overrides Sub CalculateBoundingBox(e As CalculateBoundingBoxEventArgs)
    MyBase.CalculateBoundingBox(e)
    ' Since we are dynamically drawing geometry, we needed to override
    ' CalculateBoundingBox. Otherwise, there is a good chance that our
    ' dynamically drawing geometry would get clipped.

    ' Union the mesh's bbox with the scene's bounding box
    e.BoundingBox.Union(_bbox)
  End Sub

  Protected Overrides Sub PreDrawObjects(e As DrawEventArgs)
    MyBase.PreDrawObjects(e)
    Dim vp = e.Display.Viewport
    If vp.DisplayMode.EnglishName.ToLower() = "wireframe" Then
      e.Display.DrawMeshWires(_mesh, _color)
    Else
      e.Display.DrawMeshShaded(_mesh, _material)
    End If
  End Sub
End Class
d Namespace
</code>
