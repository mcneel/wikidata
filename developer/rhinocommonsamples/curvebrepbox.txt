===== Sample: Create a Box From a Curve's Bounding Box =====

===== C# =====
<code c#>
[System.Runtime.InteropServices.Guid("6F954183-C359-4CEF-94C1-3A108D36B366")]
public class ex_curvebrepbox : Rhino.Commands.Command
{
  public override string EnglishName { get { return "csBoxFromCrvsBBox"; } }

  protected override Rhino.Commands.Result RunCommand(RhinoDoc doc, Rhino.Commands.RunMode mode)
  {
    var gc = new Rhino.Input.Custom.GetObject();
    gc.SetCommandPrompt("select curve");
    gc.GeometryFilter = Rhino.DocObjects.ObjectType.Curve;
    gc.DisablePreSelect();
    gc.SubObjectSelect = false;
    gc.Get();
    if (gc.CommandResult() != Result.Success)
      return gc.CommandResult();
    if (null == gc.Object(0).Curve())
      return Result.Failure;
    var crv = gc.Object(0).Curve();


    var view = doc.Views.ActiveView;
    var plane = view.ActiveViewport.ConstructionPlane();
    // Create a construction plane aligned bounding box
    var bbox = crv.GetBoundingBox(plane);

    if (bbox.IsDegenerate(doc.ModelAbsoluteTolerance) > 0) {
      RhinoApp.WriteLine("the curve's bounding box is degenerate (flat) in at least one direction so a box cannot be created.");
      return Rhino.Commands.Result.Failure;
    }
    var box = new Box(bbox);
    var brep = Brep.CreateFromBox(box);
    doc.Objects.AddBrep(brep);
    doc.Views.Redraw();

    return Rhino.Commands.Result.Success;
  }
}
</code>
===== VB.NET =====
<code vb>
<System.Runtime.InteropServices.Guid("7B4E4AAF-8842-4629-AB96-8654A711FA00")> _
Public Class ex_curvebrepbox
  Inherits Rhino.Commands.Command
  Public Overrides ReadOnly Property EnglishName() As String
    Get
      Return "vbBoxFromCrvsBBox"
    End Get
  End Property

  Protected Overrides Function RunCommand(doc As RhinoDoc, mode As Rhino.Commands.RunMode) As Rhino.Commands.Result
    Dim gc = New Rhino.Input.Custom.GetObject()
    gc.SetCommandPrompt("select curve")
    gc.GeometryFilter = Rhino.DocObjects.ObjectType.Curve
    gc.DisablePreSelect()
    gc.SubObjectSelect = False
    gc.[Get]()
    If gc.CommandResult() <> Result.Success Then
      Return gc.CommandResult()
    End If
    If gc.[Object](0).Curve() Is Nothing Then
      Return Result.Failure
    End If
    Dim crv = gc.[Object](0).Curve()


    Dim view = doc.Views.ActiveView
    Dim plane = view.ActiveViewport.ConstructionPlane()
    ' Create a construction plane aligned bounding box
    Dim bbox = crv.GetBoundingBox(plane)

    If bbox.IsDegenerate(doc.ModelAbsoluteTolerance) > 0 Then
      RhinoApp.WriteLine("the curve's bounding box is degenerate (flat) in at least one direction so a box cannot be created.")
      Return Rhino.Commands.Result.Failure
    End If
    Dim box = New Box(bbox)
    Dim brep__1 = Brep.CreateFromBox(box)
    doc.Objects.AddBrep(brep__1)
    doc.Views.Redraw()

    Return Rhino.Commands.Result.Success
  End Function
End Class
d Namespace
</code>
===== Python =====
<code python>
import Rhino
from Rhino.Geometry import *
from Rhino.Commands import Result
import rhinoscriptsyntax as rs
from scriptcontext import doc

def RunCommand():
  gc = Rhino.Input.Custom.GetObject()
  gc.SetCommandPrompt("select curve")
  gc.GeometryFilter = Rhino.DocObjects.ObjectType.Curve
  gc.DisablePreSelect()
  gc.SubObjectSelect = False
  gc.Get()
  if gc.CommandResult() != Result.Success:
    return gc.CommandResult()
  if None == gc.Object(0).Curve():
    return Result.Failure
  crv = gc.Object(0).Curve()

  view = doc.Views.ActiveView
  plane = view.ActiveViewport.ConstructionPlane()
  # Create a construction plane aligned bounding box
  bbox = crv.GetBoundingBox(plane)

  if bbox.IsDegenerate(doc.ModelAbsoluteTolerance) > 0:
    print "the curve's bounding box is degenerate (flat) in at least one direction so a box cannot be created."
    return Rhino.Commands.Result.Failure

  box = Box(bbox)
  brep = Brep.CreateFromBox(box)
  doc.Objects.AddBrep(brep)
  doc.Views.Redraw()

if __name__ == "__main__":
  RunCommand()
</code>

{{tag>Developer rhinocommon}}
