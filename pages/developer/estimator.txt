======Attaching Custom Data to Objects======
> **Developer:** //[[developer:dotnetplugins|.NET]]//
> **Summary:** //Demonstrates how to attach custom data to objects using .NET//

=====Download=====
**{{:developer:estimator.zip|Tagging objects with C#}}** - tags objects with estimating data using C#.

=====Overview=====
A common question asked of SDK developers is how to attach, or //tag//, objects with application-specific data. For example, if you were writing a construction cost estimating plug-in, you would want to attach specific properties, such as material, labor, cost to Rhino objects.

=====Estimator plug-in=====
The Estimator plug-in (download the source code above) is a sample C# plug-in that demonstrates how to attach custom data to Rhino objects. The sample code demonstrates several useful techniques, including:

  - Reading data from a web site.
  - Picking Rhino objects.
  - Attaching custom data to any Rhino object.
  - Iterating Rhino's geometry table.
  - Calculating object length, area, and volume.
  - Writing to CSV files.
  - Writing to XML files.
  - More...

The Estimator plug-in sample code contains useful commands.

  - EstTagItem - attaches a single tag to an item.
  - EstTagLinear - attaches linear-specific tags to curves.
  - EstTagArea - attaches area-specific tags to closed planar curves, surfaces, polysurfaces, and meshes.
  - EstTagVolume - attaches volume-specific tags to closed planar curves, surfaces, polysurfaces, and meshes.
  - EstReportOne - saves a //tag// report to an XML file.
  - EstReportAll - saves all tag data to either a CSV or an XML file.
  - EstReportItemCounts - counts the number of single item tags and reports the totals to the command line.

Please note, this is not a full-fledged cost estimating system. Rather, it is sample code to get you started writing your own tagging or estimating plug-in.

\\

{{tag>Developer dotnet}}



