===== Sample: Curve-Surface Intersection =====

===== C# =====
<code c#>
[System.Runtime.InteropServices.Guid("D3E509D4-3791-42C1-A136-FFBA37359290")]
public class CurveSurfaceIntersectCommand : Command
{
  public override string EnglishName { get { return "csCurveSurfaceIntersect"; } }

  protected override Result RunCommand(RhinoDoc doc, RunMode mode)
  {
    var gs = new GetObject();
    gs.SetCommandPrompt("select surface");
    gs.GeometryFilter = ObjectType.Surface;
    gs.DisablePreSelect();
    gs.SubObjectSelect = false;
    gs.Get();
    if (gs.CommandResult() != Result.Success)
      return gs.CommandResult();
    var surface = gs.Object(0).Surface();

    var gc = new GetObject();
    gc.SetCommandPrompt("select curve");
    gc.GeometryFilter = ObjectType.Curve;
    gc.DisablePreSelect();
    gc.SubObjectSelect = false;
    gc.Get();
    if (gc.CommandResult() != Result.Success)
      return gc.CommandResult();
    var curve = gc.Object(0).Curve();

    if (surface == null || curve == null)
      return Result.Failure;

    var tolerance = doc.ModelAbsoluteTolerance;

    var curveIntersections = Intersection.CurveSurface(curve, surface, tolerance, tolerance);
    if (curveIntersections != null)
    {
      var addedObjects = new List<Guid>();
      foreach (var curveIntersection in curveIntersections)
      {
        if (curveIntersection.IsOverlap)
        {
          double t0;
          double t1;
          curve.ClosestPoint(curveIntersection.PointA, out t0);
          curve.ClosestPoint(curveIntersection.PointA2, out t1);
          var overlapCurve = curve.DuplicateCurve().Trim(t0, t1);
          addedObjects.Add(doc.Objects.AddCurve(overlapCurve));
        }
        else // IsPoint
        {
          addedObjects.Add(doc.Objects.AddPoint(curveIntersection.PointA));
        }
      }
      if (addedObjects.Count > 0)
        doc.Objects.Select(addedObjects);
    }

    doc.Views.Redraw();

    return Result.Success;
  }
}
</code>
===== VB.NET =====
<code vb>
<System.Runtime.InteropServices.Guid("336908EB-273C-4A81-BE53-8EEFC0470B6C")> _
Public Class CurveSurfaceIntersectCommand
  Inherits Command
  Public Overrides ReadOnly Property EnglishName() As String
    Get
      Return "vbCurveSurfaceIntersect"
    End Get
  End Property

  Protected Overrides Function RunCommand(doc As RhinoDoc, mode As RunMode) As Result
    Dim gs = New GetObject()
    gs.SetCommandPrompt("select surface")
    gs.GeometryFilter = ObjectType.Surface
    gs.DisablePreSelect()
    gs.SubObjectSelect = False
    gs.[Get]()
    If gs.CommandResult() <> Result.Success Then
      Return gs.CommandResult()
    End If
    Dim surface = gs.[Object](0).Surface()

    Dim gc = New GetObject()
    gc.SetCommandPrompt("select curve")
    gc.GeometryFilter = ObjectType.Curve
    gc.DisablePreSelect()
    gc.SubObjectSelect = False
    gc.[Get]()
    If gc.CommandResult() <> Result.Success Then
      Return gc.CommandResult()
    End If
    Dim curve = gc.[Object](0).Curve()

    If surface Is Nothing OrElse curve Is Nothing Then
      Return Result.Failure
    End If

    Dim tolerance = doc.ModelAbsoluteTolerance

    Dim curveIntersections = Intersection.CurveSurface(curve, surface, tolerance, tolerance)
    If curveIntersections IsNot Nothing Then
      Dim addedObjects = New List(Of Guid)()
      For Each curveIntersection As IntersectionEvent In curveIntersections
        If curveIntersection.IsOverlap Then
          Dim t0 As Double
          Dim t1 As Double
          curve.ClosestPoint(curveIntersection.PointA, t0)
          curve.ClosestPoint(curveIntersection.PointA2, t1)
          Dim overlapCurve = curve.DuplicateCurve().Trim(t0, t1)
          addedObjects.Add(doc.Objects.AddCurve(overlapCurve))
        Else
          ' IsPoint
          addedObjects.Add(doc.Objects.AddPoint(curveIntersection.PointA))
        End If
      Next
      If addedObjects.Count > 0 Then
        doc.Objects.[Select](addedObjects)
      End If
    End If

    doc.Views.Redraw()

    Return Result.Success
  End Function
End Class
d Namespace
</code>
===== Python =====
<code python>
import rhinoscriptsyntax as rs
from scriptcontext import *
import Rhino
import System.Collections.Generic as scg
import System as s

def RunCommand():
  srfid = rs.GetObject("select surface", rs.filter.surface | rs.filter.polysurface)
  if not srfid: return
 
  crvid = rs.GetObject("select curve", rs.filter.curve)
  if not crvid: return

  evs = rs.CurveSurfaceIntersection(crvid, srfid)

  if evs:
      addedObjs = []
      for ev in evs:
          if ev[0] == 2: #overlap
              crv = rs.coercecurve(crvid)
              if crv:
                  t0 = crv.ClosestPoint(ev[1])[1]
                  t1 = crv.ClosestPoint(ev[2])[1]
                  overlapCrv = crv.DuplicateCurve().Trim(t0,t1)
                  addedObjs.Add(doc.Objects.AddCurve(overlapCrv))
          else: #point
              addedObjs.Add(doc.Objects.AddPoint(ev[1]))

      if len(addedObjs) > 0:
          doc.Objects.Select.Overloads[scg.IEnumerable[s.Guid]](addedObjs)
  doc.Views.Redraw()

if __name__ == "__main__":
  RunCommand()
</code>

{{tag>Developer rhinocommon}}
