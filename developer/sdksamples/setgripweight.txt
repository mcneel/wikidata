====== How To: Modify the Weight of a Grip Object ======
====== C++, .NET ======
> **Version:** //Rhino 4//

===== C++ =====
<code c++>
CRhinoCommand::result CCommandTest::RunCommand( const CRhinoCommandContext& context )
{
  // Pick a grip object
  CRhinoGetObject go;
  go.SetCommandPrompt( RHSTR(L"Select control point for weight editing") );
  go.SetGeometryFilter( CRhinoGetObject::grip_object );
  go.EnableReferenceObjectSelect( false );
  go.GetObjects( 1, 1 );
  if( go.CommandResult() != CRhinoCommand::success )
    return go.CommandResult();

  // Add the object to an xform object list
  CRhinoXformObjectList objlist;
  if( objlist.AddObjects(go, true) < 1 )
    return CRhinoCommand::failure;

  // Get the grip's weight
  double weight = objlist.m_grips[0]->Weight();

  // Prompt for a new value
  CRhinoGetNumber gn;
  gn.SetCommandPrompt( RHSTR(L"New control point weight") );
  gn.SetDefaultNumber( weight );
  gn.AcceptNothing();

  // Validate the results
  CRhinoGet::result res = gn.GetNumber();
  if( res == CRhinoGet::number )
    weight = gn.Number();
  else if( res == CRhinoGet::nothing )
    return CRhinoCommand::nothing;
  else
    return CRhinoCommand::cancel;

  // Do nothing if weights are the same
  if( weight == objlist.m_grips[0]->Weight() )
    return CRhinoCommand::nothing;

  // Modify the grip's weight
  objlist.m_grips[0]->SetWeight( weight );

  // Get the grip object's owning object
  CRhinoObject* old_object = objlist.m_grip_owners[0];
  if( old_object && old_object->m_grips )
  {
    // Create a new object based on the updated grip information
    CRhinoObject* new_object = old_object->m_grips->NewObject();
    if( new_object )
    {
      // Replace the old object with the new object
      context.m_doc.ReplaceObject( CRhinoObjRef(old_object), new_object );
      context.m_doc.Redraw();
    }
  }
  return CRhinoCommand::success;
}
</code>
===== VB.NET =====
<code vb>
Public Overrides Function RunCommand(ByVal context As IRhinoCommandContext)_
  As IRhinoCommand.result
  ' Pick a grip object
  Dim go As New MRhinoGetObject()
  go.SetCommandPrompt("Select control point for weight editing")
  go.SetGeometryFilter(IRhinoGetObject.GEOMETRY_TYPE_FILTER.grip_object)
  go.EnableReferenceObjectSelect(False)
  go.GetObjects(1, 1)
  If (go.CommandResult <> IRhinoCommand.result.success) Then Return go.CommandResult()

  ' Add the object to an xform object list
  Dim objlist As New MRhinoXformObjectList()
  If (objlist.AddObjects(go, True) < 1) Then Return IRhinoCommand.result.failure

  ' Get the grip's weight
  Dim weight As Double = objlist.m_grips(0).Weight()

  ' Prompt for a new value
  Dim gn As New MRhinoGetNumber()
  gn.SetCommandPrompt("New control point weight")
  gn.SetDefaultNumber(weight)
  gn.AcceptNothing()

  ' Validate the results
  Dim res As IRhinoGet.result = gn.GetNumber()
  If (res = IRhinoGet.result.number) Then
    weight = gn.Number()
  ElseIf (res = IRhinoGet.result.nothing) Then
    Return IRhinoCommand.result.nothing
  Else
    Return IRhinoCommand.result.cancel
  End If

  ' Do nothing if weights are the same
  If (weight = objlist.m_grips(0).Weight()) Then
    Return IRhinoCommand.result.nothing
  End If

  ' Modify the grip's weight
  objlist.m_grips(0).SetWeight(weight)

  ' Get the grip object's owning object
  Dim old_object As MRhinoObject = objlist.m_grip_owners(0)
  If (old_object IsNot Nothing And old_object.m_grips IsNot Nothing) Then
    ' Create a new object based on the updated grip information
    Dim new_object As MRhinoObject = old_object.m_grips.NewObject()
    If (new_object IsNot Nothing) Then
      ' Replace the old object with the new object
      Dim objref As New MRhinoObjRef(old_object)
      context.m_doc.ReplaceObject(objref, new_object)
      context.m_doc.Redraw()
    End If
  End If
  Return IRhinoCommand.result.success
End Function
</code>
===== C# =====
<code c#>
public override IRhinoCommand.result RunCommand(IRhinoCommandContext context)
{
  // Pick a grip object
  MRhinoGetObject go = new MRhinoGetObject();
  go.SetCommandPrompt("Select control point for weight editing");
  go.SetGeometryFilter(IRhinoGetObject.GEOMETRY_TYPE_FILTER.grip_object);
  go.EnableReferenceObjectSelect(false);
  go.GetObjects(1, 1);
  if (go.CommandResult() != IRhinoCommand.result.success)
    return go.CommandResult();

  // Add the object to an xform object list
  MRhinoXformObjectList objlist = new MRhinoXformObjectList();
  if( objlist.AddObjects(go, true) < 1 )
    return IRhinoCommand.result.failure;

  // Get the grip's weight
  double weight = objlist.m_grips[0].Weight();
  // Prompt for a new value
  MRhinoGetNumber gn = new MRhinoGetNumber();
  gn.SetCommandPrompt("New control point weight");
  gn.SetDefaultNumber(weight);
  gn.AcceptNothing();

  // Validate the results
  IRhinoGet.result res = gn.GetNumber();
  if (res == IRhinoGet.result.number)
    weight = gn.Number();
  else if (res == IRhinoGet.result.nothing)
    return IRhinoCommand.result.nothing;
  else
    return IRhinoCommand.result.cancel;

  // Do nothing if weights are the same
  if (weight == objlist.m_grips[0].Weight())
    return IRhinoCommand.result.nothing;

  // Modify the grip's weight
  objlist.m_grips[0].SetWeight(weight);

  // Get the grip object's owning object
  MRhinoObject old_object = objlist.m_grip_owners[0];
  if( old_object != null && old_object.m_grips != null )
  {
    // Create a new object based on the updated grip information
    MRhinoObject new_object = old_object.m_grips.NewObject();
    if (new_object != null)
    {
      // Replace the old object with the new object
      MRhinoObjRef objref = new MRhinoObjRef(old_object);
      context.m_doc.ReplaceObject(objref, new_object);
      context.m_doc.Redraw();
    }
  }
  return IRhinoCommand.result.success;
}

</code>


{{tag>Developer cplusplus dotnet}}
