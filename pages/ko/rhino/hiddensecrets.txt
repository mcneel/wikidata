======Rhino의 숨겨진 비밀======

작업 시간을 단축하는 데 매우 유용한, Rhino 전문 사용자들이 밝히는 **수 십 가지의 팁과 요령**을 소개합니다!

<code>
이 페이지는 Rhino 5용으로 업데이트되어야 합니다.
</code>

=====1. TAB 방향 잠금 키:=====

**Line** 또는 **Scale**등의 명령을 시작한 후 첫 번째 개체를 지정하고, 두 번째 클릭하기 전에 **TAB** 키를 누르면, 첫 번째 지정한 개체와 **TAB** 키를 눌렀을 때의 //마우스 커서 위치 사이의 축으로 방향을 제한합니다//. 방향 제한이 설정되면, 두 번째 지점을 지정하기 위해, 이 축을 따라 어디든 이동할 수 있습니다. 방향 입력에 2 점을 지정해야 하는 모든 명령에서 실행됩니다. 또한 직교 모드와 개체 스냅과 함께 사용하면 특히 유용합니다.

=====2. 동적인 카메라 조작=====
**[[CameraManipulation|Page with explanatory animations]]**

**Ctrl**, **Shift** 키와 함께 오른쪽 마우스 단추로 끌어 초점이동과 확대/축소를 실행합니다. 오른쪽 마우스 단추만으로 마우스를 끌면 뷰를 초점이동하거나 회전시킵니다. 마우스 가운데 단추가 스크롤 휠인 경우, 휠을 돌려 확대/축소를 실행할 수 있습니다.

**Camera** 명령 (키보드 바로가기 **F6**)을 사용하여 //카메라를 나타내는 깔때기// 모양을 표시하거나 숨길 수 있습니다. 깔때기를 마우스로 끌어 카메라 속성을 쉽게 제어할 수 있습니다. 특정한 지점과 방향에서의 뷰가 필요한 경우 유용합니다.

=====3. Dragmode 명령=====

서피스 제어점을 마우스로 끌어올 때, UVN 옵션을 사용하면 구성평면의 X 와 Y 대신, 서피스 U와 V로 직교가 되도록 잠급니다. 원래 실행되는 대로 되돌리려면 **Dragmode**를 구성평면으로 다시 조정하는 것을 잊지 마세요.

=====4. 선택 필터=====

많은 경우, 키보드(명령행)를 사용하여 개체 선택시 필터를 적용시킬 수 있습니다. 커브만을 선택하고자 할 때 **crv**를 사용하시면 유용합니다. 예: 서피스 전체가 아닌, 가장자리 커브를 사용하여 트림하려고 하는 경우, **Trim** 명령을 시작하고 명령행에서 절단 개체를 선택한 후, **crv**를 입력하고 Enter 키를 누릅니다. 서피스의 가장자리를 클릭하면 가장자리 커브가 트림 개체로 선택될 것입니다. **DupEdge**를 실행하여 트림에 사용된 가장자리 대신 커브를 얻을 필요가 없습니다.  이 기능을 Split 명령과 많이 사용한다면, 다음과 같은 매크로를 만들어서 사용하셔도 좋습니다. (분할할 서피스가 미리 선택된 경우에만 실행됩니다): ! //_split pause crv   Trim 명령에서 crv 옵션을 많이 사용한다면 다음의 매크로를 참조하십시오 (미리 선택된 개체가 없을 경우에만 실행됩니다): ! //_Trim crv

=====5. 렌더링 미리보기=====

기본 Rhino 렌더러나 Flamingo 에서 **RenderPreview** 명령을 사용하면 빠르게 저화질의 렌더링 결과를 볼 수 있습니다. 전체 렌더링 실행시 오래 기다려야 하는 것과 달리, 실행 결과에서 조명, 색상, 구성 등을 확인하실 때 사용하지면 유용합니다. 뷰포트의 일부분을 렌더링하려면 **RenderPreviewWindow** 명령을 사용하십시오. 더욱 빠른 속도로 렌더링 결과를 보실 수 있습니다.

=====6. 트림 작업=====

선을 트림 처리할 때, **Fillet** 명령에서 반지름값 0 을 사용하여 트림한 후 모서리를 결합합니다. **Fillet** 명령에서 설정을 기억하므로, 또한 대부분 Chamfer 보다 Fillet 을 사용하는 경우가 빈번하므로, 이 트릭에 **Chamfer**를 사용하고 두 거리를 모두 0 으로 설정한 후 각진 모서리를 만들 때 0 으로 매번 변환하지 않고, **Fillet** 명령에서 실제로 사용하는 반지름을 기억하게 합니다. 4 버전에는 이러한 역할을 하는 **Connect** 명령이 있습니다.

=====7.  Rhino로 파일 끌어 놓기=====

Rhino에서 열 수 있는 파일을 Rhino 인스턴스의 작업표시줄이나 Rhino 창으로 마우스로 끌어 놓으면 **열기(Open)**, **삽입(Insert)**, **가져오기(Import)**, **첨부(Attach)**를 선택하는 대화상자가 표시되며, 원하는 작업을 선택한 후 **확인**을 클릭합니다.  파일 탐색창에서 파일을 찾는 방법보다 쉽습니다!  Rhino에서 열 수 있는 파일이라면 //어떤 형식의 파일//(.3DM, IGES, STEP...)도 가능합니다.  여러 파일도 한 번에 마우스로 끌어 놓을 수(drag and drop) 있습니다.  //<color darkslategray>\\ 
\\
Windows의 XP SP 2 이후부터는 작업표시줄에 직접 파일을 놓을 수(drop) 없습니다.  마우스 단추를 놓는 대신, 작업표시줄 단추에 마우스를 두고 단추를 누른 상태를 유지하면 관련 Rhino 창이 화면에 표시되며 그곳에 파일을 놓으시면 됩니다.</color>//

> **새 정보:** //4버전과 5버전에서 [[developer:rhinoscript|RhinoScript]] (*.rvb) 파일을 Rhino 창에 놓아 스크립트를 로드할 수 있습니다. Rhino 시작 스크립트에 자동으로 스크립트를 추가하고 스크립트를 실행시키는 명령 앨리어스를 자동으로 추가하는 새로운 스크립트 방식이 있습니다. 자세한 정보는 [[developer:rhinoscript|RhinoScript]] Help 파일을 참조하세요.//

=====8.  선 길이 제한=====

**Line** 명령의 시작점을 선택한 후 거리값을 입력하면 선의 길이를 거리값만큼 제한합니다. 이 방법은 **Polyline** 세그먼트와 다른 경우에도 적용됩니다. 커브상에 점을 배치하거나 개체를 이동할 때 선 거리 제한을 사용하면 편리합니다.

=====9.  구성표=====

**구성표(scheme)**를 사용하여 Rhino 작업 영역 설정을 저장하고 불러올 수 있습니다. 기본적으로 구성표는 다음 항목이 포함된 Windows 레지스트리 키(reg folder)입니다:

  * 명령 기본값;
  * 대화상자 위치;
  * Rhino 옵션의 모든 설정 (앨리어스, 화면표시, 색 설정, 마우스 설정, 렌더링 설정, 바로가기 키);
  * 최근에 사용된 파일 목록;
  * 사용된 작업 영역 (도구모음 컬렉션)과 레이아웃.

  * **//플러그인 로드 여부는 구성표로 제어할 수 없습니다//**

구성표를 저장하려면 "C:\Program Files\Rhino4.exe" /scheme="YOURSCHEME" //[또는...Rhino3.exe...]//을 대상으로 바로가기를 만듭니다. 원하는 대로 Rhino 작업 영역과 옵션을 설정하면 레지스트리 키에 사용자 설정이 저장됩니다.

HKEY_CURRENT_USER\Software\McNeel\Rhinoceros\4.0\Scheme: YOURSCHEME //[또는 ...\3.0\...]//.

레지스트리 편집에 대해 익숙하시다면 **regedit**으로 Windows 레지스트리의 정보를 직접 편집하실 수 있습니다. 여러 명의 Rhino 사용자가 한 대의 컴퓨터를 공유한다면, 사용자 수에 맞춰 원하는 수 만큼 바로가기와 구성표를 만들 수 있습니다. 

<color darkslategray> //Mitch 작성: 정말 편한 기능입니다!  저는 제 컴퓨터에 4 언어, 작업 영역 설정 등에 맞춰 4개의 구성표를 설정하여 사용하고 있습니다. 한 가지 알아두어야 할 점은 공백의 구성표에서 시작하기 보다는 기존의 Rhino 설정을 사용자에 맞춰 조정한 후 구성표로 저장해야 한다는 점입니다.//</color>

**[[rhino:schemes|Rhino에서의 구성표 작업 관련 상세 정보]]**

=====10.  선택 방식=====

많은 분들이 간과해온 사항 중 하나는 창/교차 상자 선택의 구분입니다. 마우스를 **왼쪽**으로 끌어 **교차 상자** 선택(파선으로 표시)할 때 선택 상자에 닿는 모든 개체가 선택되며 개체 전체가 선택 상자에 포함되지 않더라도 선택됩니다. 마우스를 **오른쪽**으로 끌어 **창 상자** (실선으로 표시)로 선택하면 선택 상자에 완전히 포함되는 개체들만 선택됩니다. 언제 교차 상자 또는 창 상자 선택을 하는지 알고 작업한다면 개체 선택시 작업 시간을 단축할 수 있을 것입니다. Rhino 옵션의 마우스 옵션이 "둘 다 사용"으로 설정되어 있어야 합니다. **팁**://선택할 때 ALT 키를 누르고 있으면 개체 끌기가 방지됩니다//.

> **메모:** //오른쪽에서 왼쪽으로 마우스를 끌어 선택할 때 교차 상자 선택을 해야하는 경우가 있습니다. 창 선택 시, "C" (교차 상자 선택: Crossing Window), "W" (창 상자: Window) 를 입력하면 "둘 다 사용" 옵션보다 우선시됩니다.//

=====11.  개체 스냅=====

개체 스냅 확인란에서 오른쪽 클릭하면 클릭된 항목을 제외한 나머지 개체 스냅이 모두 해제됩니다. Alt 키를 누르면, 확인란을 해제하지 않고도 개체스냅이 일시 중지됩니다.


=====12.  화살표 키=====

어느 한 뷰에서 뷰를 조금씩 증분하여 뷰를 변경하려면 화살표 키를 사용합니다.

화살표 키는 미세 이동에도 사용됩니다. 개체와 제어점을 지정된 거리만큼 제어하여 조금씩 이동하는 것입니다. 화살표 키와 **Ctrl** 키 그리고 **Shift** 키를 함께 사용하면 제각각 다른 거리 설정을 사용할 수 있습니다. 이 설정은 옵션/모델링 보조 기능에 있습니다. 화살표 키를 단독으로 사용하거나(위에 설명 드린 뷰 조작은 해제됨) Alt+화살표 키 조합을 사용하면 뷰 기능이 유지됩니다.  화살표 키는 개체를 설정된 옵션에 따라 활성 구성평면이나 절대좌표를 기준으로 직교로 미세 이동합니다. 또한 PageUp 키와 PageDown 키는 Z 방향으로 화살표 키 역할을 합니다.


=====13.  Home 키와 End 키=====

Home 키와 End 키는 제각각 **UndoView** 명령과 **RedoView** 명령을 실행하므로 뷰 히스토리에서 원하는 단계로 되돌아갈 수 있습니다. 

=====14.  솔리드 가장자리에 필릿 실행=====

필릿되지 않은 형태를 만들고 모든 서피스를 결합(Join)하여 닫힌 폴리서피스를 만듭니다.  Rhino > 편집 >개체 속성> 개체 > 자세히 (단추)로 개체가 닫혀 있는지 확인합니다.  ShowEdges 명령을 떨어진 가장자리 모드로 사용하여 확인할 수 있습니다.   간단한 대화상자에서 모두 실행할 수 있습니다.

같은 작업에서 같은 반지름으로 필릿 실행하려는 인접한 가장자리를 모두 선택하고, FilletEdge 명령으로 가장 큰 반지름을 가진 필릿을 만듭니다.  필릿 실행으로 만들어진 모든 구멍을 채웁니다.  이 작업에는 계획인 필요합니다.

둥글려야 하는 모든 인접한 가장자리를 포함하여, 더 작은 반지름으로 필릿을 만듭니다(가능하면 큰 반지름 필릿 작업으로 만들어진 일부 가장자리도 포함).  닫힘 상태인지 다시 확인합니다.

명령을 시작하고 개체를 창 선택하여 솔리드의 모든 가장자리를 한 번에 같은 반지름으로 필릿 실행할 수 있습니다.

**[[rhino:advancedfilleting|고급 레벨 필릿 샘플 보기]]**

=====15. 매크로로 도구모음 숨기기/표시하기:=====

//-//Toolbar //Toolbar "Default" //Toggle "Main1" //Enter _Enter//

기본값은 작업 영역 또는 '컬렉션' 이름 (이름에 공백이 있다면 따옴표가 필요함. ㅡMain1은 개별적인 도구모음 이름이며 공백이 있다면 따옴표가 사용됨) 입니다. 저는 따로 생각할 필요 없이 항상 따옴표를 사용합니다... Toggle 부분에는 더 분명하게 Show 또는 Hide 를 사용하실 수 있습니다.

<color darkslategray>Mitch 작성: 한 번에 하나의 작업 영역을 사용한다면, 작업 영역 이름 대신 enter를 사용할 수 있습니다 -</color>

//-Toolbar Toolbar Enter Toggle Toolbarname Enter Enter//

전체 작업 영역에는 Close 또는 Open 을 사용할 수 있습니다:

//-Toolbar //Collection //Open "BonusTools" Enter Enter//

> **새 정보:** //Rhino 4 버전에서는 도구모음 고정 영역의 빈 공간을 오른쪽 클릭하여 도구모음 목록을 표시할 수 있습니다. 표시하고자 하는 도구모음의 확인란을 클릭합니다. 또한 도구모음 잠금 확인란에 목록의 아래에 있습니다.//

=====16. 개체에 Dot 명령으로 레이블 부착하기=====

미리 번호가 지정된 도트(0-9)나 **Dot** 명령을 사용하여 원하는 텍스트를 입력합니다. 이 기능은 모두 **주석** 도구모음에 있습니다. 도트는 뷰 평면과 항상 평행을 유지하고, 모델의 회전과 확대/축소 상태와 무관하게 동일한 크기를 유지한다는 장점이 있습니다.  단점 - 크기와 텍스트 스타일을 수정할 수 없습니다. Rhino 전용입니다(내보내기 실행이 되지 않습니다).  팁 - 공백이 있는 텍스트 문자열은 따옴표로 해당 문구를 둘러싸야 합니다.

> **새 정보:** //Rhino 4 버전에서는 텍스트 도트를 두 번 클릭하면 내용을 편집할 수 있습니다. 공백이 있는 텍스트를 추가할 때 이 방법을 사용할 수 있습니다. 텍스트에 도트를 추가하고 두 번 클릭하여 편집 상자에 공백이 있는 텍스트로 수정합니다. 편집 상자에서 "큰따옴표"를 입력할 필요가 없습니다. 4버전에는 도트를 선택하는 SelDot 명령도 추가되었습니다.//

=====17. CheckNewObjects 명령을 사용하여 개체 생성 시 오류 인식=====

이 명령은 모델에 잘못된 지오메트리를 만드는 오류를 찾는 도구입니다. 이 명령은 기본적으로 해제되어 있습니다.

이 명령을 활성화하려면 명령 프롬프트에 **CheckNewObjects**를 입력합니다.

이 기능은 모델에 있는 잘못된 지오메트리의 원인을 찾아 수정하도록 허용합니다.

저희가 Rhino 디버그하는 데 도움을 주시려면 (그리고 여러분의 파일에서 잘못된 개체를 찾고자 하신다면) 이 기능을 설정해두시기 바랍니다.

CheckNewObjects 가 실행되는 원리:

새로운 개체를 만들거나 다른 파일에서 개체를 가져올 때마다, Rhino가 Check 명령을 실행합니다. 만약 Check 명령이 개체가 잘못되었다고 판명하면, Rhino에 문제를 알리는 대화상자가 표시됩니다. 하나의 잘못된 개체가 만들어질 때마다 이러한 메시지가 한 번씩 표시됩니다.

Check 명령 실행에는 시간이 소요됩니다. 파일 가져오기와 복잡한 솔리드 작업의 시간이 지연될 수 있습니다. Rhino의 속도가 지나치게 느려졌다면, 명령행에서 CheckNewObjects를 입력하여 이 기능을 사용 안 함으로 설정하실 수 있습니다.

**[[rhino:badobjects|잘못된 개체에 대한 정보와 방지/수정하는 방법]]**

=====18. PictureFrames 을 배경 비트맵으로 사용하기:=====
[[rhino:pictureframes|PictureFrames]] 명령은 Rhino의 [[rhino:backgroundbitmap|BackgroundBitmap]]의 더 강력하고 유연한 버전이라고 할 수 있습니다. 이미지는 3D 공간에서 평면에 텍스처 맵으로 첨부되어 렌더링 모드에서 표시되므로, 독립적인 지오메트리로 뷰포트 배경에 배치되는 것이 아니라 텍스처 맵으로 표시됩니다.  

PictureFrames 의 몇 가지 장점 -

  * 장면에 이미지를 무제한으로 배치할 수 있습니다. 배치한 이미지는 모든 뷰포트나 임의의 뷰포트에서 모두 볼 수 있습니다.
  * 구성평면 X 및 Y에서만 정렬하는 BackgroundBitmaps와 다르게, 원하는 대로 이미지의 크기 조정/회전이 가능합니다.
  * 이미지의 밝기와 투명도를 조정할 수 있습니다.

한 가지 생각해볼 단점은 이미지가 배치될 때 공간에서 개체 뒤에 항상 있을 거라는 보장이 없다는 점입니다. [[rhino:pictureframes|PictureFrames]] 는 3D 공간의 개체일 뿐입니다. 

**[[rhino:pictureframes|PictureFrames을 참조 이미지로 사용하는 자세한 정보]]**



=====19. 배경 비트맵을 최대한 좋게 표시하려면:=====

**[[ko:rhino:backgroundbitmap|BackgroundBitmap 명령으로 이미지를 선명하게 표시하는 몇 가지 팁]]**



=====20. 디자인 프리젠테이션에 전체 화면 모드 사용:=====
FullScreen 명령은 메뉴와 상태 표시줄, 도구모음, 명령 프롬프트, Windows 제목 표시줄을 숨기고 뷰포트로 화면 전체를 표시합니다. 원래 표시 상태로 돌아오려면 ESC 키를 누릅니다.

하이픈이 추가된 버전은 명령행에 옵션을 추가합니다.
