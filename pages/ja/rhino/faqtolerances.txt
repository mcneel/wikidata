======許容差を理解する======
> **製品:** //[[rhino:home|Rhino]]//
> **概要:** //Rhinoでの「許容差」の意味と 使い方//

=====許容差とは?=====
<color darkslateblue>**//許容差とは何ですか？Rhinoでどのように設定するのですか？//**</color>

Rhinoを始めて使う方達からよく寄せられる質問のひとつに「許容差」があります。多くのモデリングプログラムでは、許容値は設定できません。好むと好まざるとに関わらず、許容差は予め決まっています。Rhinoには、ニーズに応じて独自の許容値を設定できるという利点があります。しかし、それらを正しく設定するには多少の経験と理解が必要です。

{{vimeo>85108857?640x360}}Rhinoの許容差と精度に関する動画


=====1: 許容差の理解=====

**//<color darkslateblue>許容差</color>//**とは、どの程度の精度が必要か（逆に言うと、プロジェクトで許容できる誤差の程度）を示す方法です。求められる精度は、プロジェクトやオブジェクトのサイズによって大きく異なります。スイスの時計と同じミクロン単位の精度で建物を建てることは、その逆も同様にばかげています（つまり不可能だということです）。

許容差を定める技術的な手法は詳細で複雑です。ここでは、そのような詳細については説明しません。私達のここでの役割は、モデリングのためにプロジェクトを設定するお手伝いをすることです。Rhinoでは絶対許容差は現在選択しているテンプレートによって、0.01または0.001単位（インチ、mm、メートルなどの使用している単位）に設定されています。他の許容差で独自のテンプレートを作成することもできます。次に**//<color darkslateblue>絶対許容差</color>//**について説明します。

=====2: Rhinoの絶対許容差設定=====

Rhinoの用語では、絶対許容差設定は2つのオブジェクトまたは要素が「//十分に近い//」と見なすことができる最大の許容距離を決定します。 「//十分に近い//」とは、2つのサーフェスまたは曲線が結合可能であること、またはスイープなどの**//<color darkslateblue>近似</color>//**操作が指定された絶対許容範囲内でエッジをレールに沿わせてサーフェスを生成できることを意味します。 

> **注記:** //結合操作では、2倍の絶対許容差が許可されます。注意してください。//

**<color royalblue>近似操作とは何でしょうか？</color>**

オブジェクトによっては、コンピューターの浮動小数点演算が計算できる限界まで、数学的に完全に定義できるものがあります。
一般的には、極端に小さな許容誤差を気にする必要はありません。ただし、コマンドの中には近似により、曲線やサーフェスを他の曲線やサーフェスに**//<color darkslateblue>フィットまたは一致</color>//**させるものがあり、この場合、より正確な解が必要なほど、（時にはコンピュータがロックアップ（フリーズ）してしまうほど）より長い時間が計算にかかります。絶対許容差の設定は、十分な解が得られた、計算をやめてほしい時点をRhinoに伝えます。

必要な絶対許容差よりも高い絶対許容差を指定する場合のもう1つの欠点は、Rhinoが非常に多くの制御点（重い（データ量が大きい）、ノイズが多い（滑らかでない）、編集が難しい）を持つ領域や交差などを生成することです。


**<color royalblue>近似操作にはどういったものがありますか？</color>**

曲線やサーフェス間の交差を見つけることが必要なコマンドが一例です。これらのコマンドには次のものが含まれます（ただし、これらに限定されません）: Trim、Split、Intersect、Contour、Section、Offset（曲線およびサーフェス）、Project、Sweep1および2、すべてのブール演算操作コマンド、FilletSrf、FilletEdge


**<color royalblue>緩い許容差でモデリングするというのはどうですか?</color>**

緩い（大きい）許容差の利点は、計算時間とデータ量を削減できることですが、モデルの精度が犠牲になります。これが、許容差の設定には程度の経験が必要になる理由です。適切な妥協点を見つけることが常に必要です。

//Intersect//コマンドを例にとって見ましょう。このコマンドは、2つのサーフェスの交差位置に曲線を作成します。曲線は、2つのそれぞれのサーフェス上で//**<color darkslateblue>絶対許容差</color>**//内にあることが保証されています。

Intersectコマンドを試し、結果としてできる曲線を片側に移動して残しておいてください。次に、許容差設定に0を1つ追加してIntersectコマンドを再度実行します。次に、両方の曲線の制御点をオンにします。2つ目の曲線は、より多くの制御点を持ち、より重く、2つのサーフェスのより近くにとどまります。一方の曲線は他方の曲線よりも優れているでしょうか？それはニーズ次第です。製造過程において曲線がよりフィットしていることが重要だということが必要でない場合、1つ目の「軽い」曲線の方がファイルサイズが小さく、計算が速く、よりよくパラメーター化されたサーフェスを作成できるため、よい曲線だと言えるでしょう。

異なるオブジェクトやスケールに、異なる許容差が必要になる場合があります。例えば、車のボディの一般的な形状を設計する場合（1.0mmの範囲に大切な詳細を含む可能性がある）、0.1mmのファイル許容差で十分な場合があります。しかし、その同じ車のより小さな詳細部分については、0.01mmでも十分ではない可能性があり、モーターの内部構造には、軸受のサーフェスの場合、0.001または0.0001のファイル許容差が確実に必要です。

別の経験に基づくアドバイス: 製造過程全体で保てる許容差に等しい、またはそれよりも1桁（1/10）小さい許容差（最小の詳細部分よりも1桁小さい許容差）のいずれかを使用します。

**<color royalblue>許容差のオーバーライド、またはカスタム許容差の作成</color>**

NetworkSrfやMatchSrfコマンドなど、コマンドの中には特定の操作の許容値を個別に指定できるものがあります。これらのコマンドではダイアログボックスが表示され、一般の許容差に優先（オーバーライド）する許容差を指定できるオプションが表示されます。コマンドの中には再フィットオプションがあるものがあり、それを使っても独自の許容差を指定できます。

また、JoinEdgeのようなコマンドでは、必要だと思われる場合は絶対許容差をその部分だけ設定より高くすることができます。この操作を行う場合は、その部分は「不正確」になるので注意してください。

=====3.1:  Rhinoの相対許容差=====

Rhino V6以降では、相対許容値の設定はなくなりました。Rhino V5まではいくつかのコマンドで使用されました。通常はそのままにしておくことができました。The relative tolerance setting is no longer present from Rhino V6 and up.
Up until Rhino V5 is was used on few commands and could generally be left alone. 

=====3.2:  Angular tolerances in Rhino=====

The angular tolerance is important in that it tells Rhino at what point you want two curves or surfaces to be considered tangent. The default setting of 1 degree is rather large for fine modeling. Surfaces that are 1 degree out of tangency can still show a visible fold or line. I find a setting of 0.1 degree or even finer to be better.
=====4:  How tolerances can affect your project and workflow=====

An important thing to note is that tolerances should be set at the beginning of the modeling process, for, although you can change the tolerances while you work, objects which were previously modeled with lower tolerances will not be fixed if you raise them. A good practice is to continuously check your work by joining up elements as you create them. If they join, you're within your tolerance limits. If they don't, you need to go back and find out why and correct the situation immediately. This avoids ending up with a finished model with problem areas or inaccuracies which may be hard to fix at that late stage without completely rebuilding certain sections.

Operations that involve the intersecting function, such as Intersect, Split or the Boolean operations, can also be quite sensitive to tolerance settings. Often, if the absolute tolerance is set too low, complete intersections may not be found. Splitting or Boolean operations may fail as a result. (Note that tolerances are not the only reason for these operations to fail.) Too tight a tolerance setting may also be harmful. Besides creating overly long calculation times, Rhino may even crash. In general you should keep the absolute tolerance setting in the range of 0.01 to 0.0001. And never set it below 1.0e-5. If you need a tighter tolerance, use smaller units instead.


=====5:  Exporting to other (downstream) programs=====

If you are going to export objects to another downstream application (such as CAM software or a solid modeler), it is important to take into account the precision that these programs require for imports to be successful. Experience is the only guide here. When in doubt, ask on the Rhino support newsgroup. Someone who has had the experience can give you guidelines. In general, MCAD applications seem to appreciate higher precision objects, so if that's your target, error on the more precise side if possible! Your entire modeling process from start to finish needs to be done at this level of precision to be successful with your export.

\\

{{tag>Rhino}}