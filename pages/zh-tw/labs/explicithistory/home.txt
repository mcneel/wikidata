====== Grasshopper 主頁面 1 ======
| {{:legacy:en:ExplicitHistoryBanner.png}} |  //**Grasshopper Wiki 頁面**// |
|  //[[http://www.mcneel.com|Robert McNeel & Associates]]// |

----
> **摘要:** //Grasshopper外掛程式的主要Wiki頁面//
<color Green>**Grasshopper現在有自己的網站-www.grasshopper3d.com\\ 
可以去那邊下載，尋找更多資訊、Grasshopper討論等等。**</color>

[[http://www.grasshopper3d.com/|主頁]]\\ 
[[http://www.grasshopper3d.com/page/download-1|下載]]\\ 
[[http://www.grasshopper3d.com/forum|Grasshopper 討論區]]

<color yellowgreen>**//強烈建議//在Rhino必須為最新的版本以安裝執行Grasshopper。**.</color>

\\
====== 安裝說明:======

\\

<color green> **此插件不能在網路上安裝，請確定放在硬碟上!**</color>

\\

Grasshopper的正確版本是自安裝檔.exe。\\ 
只要從 [[http://www.grasshopper3d.com/|Grasshopper 網站]]下載執行檔且執行安裝。//當您安裝Grasshopper時，Rhino應該關閉。//\\ 
本身會自動的安裝在”Grasshopper”資料夾在 //...Rhino X.x > Plug-ins// 資料夾。

Grasshopper將自動地安裝在正確的Rhino版本，(通常為V4)但是可以從其他的版本讀取(像 V5)從版本與指示安裝者在現有的安裝之中藉由跟隨外掛程式]手動安裝步驟。

一旦安裝完成，開啟Rhino並輸入 <color green>**Grasshopper**</color>指令將載入此外掛程式。


Grasshopper是32及64位元共用程式，意思是可以在任何一個Rhino 32或64位元版本執行。
====== Grasshopper 頁面:======

\\

  - [[labs:explicithistory:interfaceexplained|Grasshopper 介面介紹]]
  - [[labs:explicithistory:objectsexplained|Grasshopper 物件介紹]]
  - [[labs:explicithistory:persistentdatarecordmanagement|Grasshopper Persistent Data management]]
  - [[labs:explicithistory:volatiledatainheritance|Grasshopper Volatile Data management]]
  - [[labs:explicithistory:datastreammatchingalgorithms|Grasshopper Data Matching explained]]
  - [[labs:explicithistory:examples|Grasshopper tutorials]]
  - [[labs:grasshopperworkshop|Grasshopper workshop outline]]
  - [[labs:grasshoppergallery|Grasshopper Gallery (wiki)]]
  - [[http://www.grasshopper3d.com/photo|Grasshopper Gallery (Grasshopper Site)]]

\\

----

| {{:legacy:en:GH_SquareBanner.jpg}} |
======何謂Grasshopper？======

Rhino4具有內建一個基礎歷史特徵，非插入式圖層可以考慮到在工作流程上一定程度之建模步驟的自動更新。當前在Rhino4裡記錄建構歷史(history)的功能是較隱含的，亦即：當進行時就會被記錄。這個意思說明在建模時間上沒有額外的開銷來精確地排序形勢。在Rhino裡想見到：更多的特徵，沒有附加的限度。無論無何，隱含的紀錄建構歷史(Implicit history)不能做一些明確定義之紀錄建構歷史的事情。

首先，從用戶來說建構歷史樹(history tree)是隱藏的。不同建構歷史階段的行為是不能夠被調整的。舉例來說，有基底的放樣建構歷史只有一次機會去設定內容。一旦曲面完成，只有一個方法去改變放樣的設定就是重建這個曲面。這將違反下面全部的歷史紀錄而且以此方式可能是極大的限制。這不可能從放樣的建構歷史中去增加或替換曲線。

Grasshopper藉由處理這些原因尋找這些用戶建構的”建構歷史樹”或更好”定義(definition)”之步驟將會被建構成物件。這個定義建構在一個獨特的視覺及相互作用的方法，讓沒有看過程式的人們去簡單學習且更有趣。

這裡當然有過程的限制。顯然地不可能一直去紀錄建構歷史樹，必須由用戶按照規則去建構。自從用戶不要揭露選項及設定以來就需要來執行不可能使用的可用Rhino指令。

無論如何，表述其優勢：
1.	此樹是可以看得見的，而且因此可以在整體中或部件中重新使用遍及不同的模型。
2.	此運算器在記錄建構歷史樹上看得見而且因此可以被替換及調整的。
3.	運算子沒有在模型中綁住幾何，只有一些細節與數學也可能去建造建構歷史樹。
4.	數學與邏輯關聯可以被建構的。
5.	外部的來源可以被回復及儲存資料。

能由任何人摸索並關心在生成模型上，複雜物件或甚至簡單的物件能有超過更多的特徵控制，這使Grasshopper是一個令人驚嘆的工具。

Grasshopper是一個開發中的程式。特徵及程序常被增加/修改，尚需要更多時間完成更多功能以利正式版1.0發行，但是Grasshopper已由世界各地的人們所廣泛使用

