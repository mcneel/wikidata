====== Using Numpy SciPy and other Cpython libraries in GHPython ======

There are ways to use Numpy and Scipy within the GHPyton component in Grasshopper.


**[[https://www.food4rhino.com/app/gh-python-remote|Cpython Remote for Grasshopper]]**

GH Python Remote is a special component that lets you use regular Python code directly in the GHPython component, like importing Numpy, Scipy, matlplotib et al.  It is developed by Pierre Cuvilliers at MIT. See below for more instructions on installation and setup for Rhino 5.

**[[https://compas-dev.github.io/|COMPAS]]**


COMPAS is an open-source, Python-based computational framework for collaboration and research in architecture, 
engineering and digital fabrication. It is developed by the Block Research Group (https://block.arch.ethz.ch) of 
ETH Zurich (http://www.ethz.ch).


**[[https://www.food4rhino.com/app/ghcpython|CPython for Grasshopper]]**

Cpython plugin for Grasshopper
Aug 1st, 2017
[[https://github.com/MahmoudAbdelRahman/GH_CPython|GHCPython Github]]



-----

===== CPython Remote =====

GH Python Remote is a special component that lets you use regular Python 2.7.5 code directly in the Rhino 5 GHPython component, like importing Numpy, Scipy, matlplotib et al.

Rhino 5 will run IronPython.  The Anaconda install can run any CPython 2.

Setting this up takes many steps:

  -  Install Grasshopper for Rhino 5
  -  Setup an AnaConda virtual environment running Python 2.7.5, Nunpy, SciPy etc....
  -  Install GHPython for Grasshopper
  -  Update the Rhino Python engine used by Grasshopper to the release 2.7.5
  -  Install GHPython Remote in Grasshopper
  -  Run the GhPython Remote sample


==== Install Grasshopper for Rhino 5 ====

  - Make sure the [[https://www.rhino3d.com/download/rhino/5.0/sr|Rhino 5 is SR9]].  Check Help pulldown > About Rhinoceros > Lower right.
  - [[http://download.rhino3d.com/Grasshopper/1.0/wip/rc/download/|Install Grasshopper]] or make sure the current Grasshopper is Build 0.9.0076 by opening Grasshopper > Help pulldown > About Grasshoppper.

==== Update the Rhino 5 Python ====

Rhino uses IronPython 2.7.5. Rhino 5 requires this version of IronPython, but needs for this project needs a 'release' version of Python.

  - To check the current version of Python that Rhino is using.  On the rhino command line type "EditPythonScript". 
  - Within the Python editor run the following code:<code python>
import sys
print sys.version_info
</code>
  - The display will report something like this:<code python>
sys.version_info(2, 7, 0, 'beta', 0)
</code>
  - If the version is does not list 'final' or is not 2.7.5, then [[https://www.python.org/download/releases/2.7.5/|install a release version of Python 2.7.5]]. Take note of the path that python is installed.
  - After installing Python, Open Rhino and run the EditPythonScript again.
  - In the script editor go to the Tools pulldown > Options... > File Tab.
  - Add these 3 paths to the Module Search Paths:<code python>
%installed path%\IronPython275
%installed path%\IronPython275\Lib
%installed path%\IronPython275\DLLs
</code>
  - Restart Rhino
  - To check the current version of Python that Rhino is using.  On the rhino command line type "EditPythonScript". 
  - Within the Python editor run the following code:<code python>
import sys
print sys.version_info
</code>
  - Now the script should display the full release version information:<code python>
sys.version_info(major=2, minor=7, micro=5, releaselevel='final', serial=0)
</code>


==== Setup an AnaConda virtual environment running Python 2.7.5 ====

1) Install Anconda Virtual Environment:

  - Install [[https://www.anaconda.com/download/|Anaconda 2 for Windows running Python 2.7]]
  - Do not worry about checking the Options about setting the Path or the default Python interpreter to Anadconda

2) Setup a new Anaconda Environment
  - Once installed, start up the Anaconda Prompt App. I find it best to set "Run as Administrator"
  - Setup a new Rhinoremote environment by using the command <code python>
conda create -n rhinoremote python=2.7
</code>
  - Activate the new environment: <code python>
conda activate rhinoremote
</code>
  - Install Numpy, Scipy. Use this to install any other CPython libraries in the Rhinoremote envoronment: <code python>
conda install numpy
conda install scipy
</code>
  - It looks like the new pip major version (>=10.0.0) finally removed the "pip.main" functionality that many are using but that was not officially supported... In turns this breaks the installation script. For now, you should be able to move one step further by downgrading pip to 9.0.3: <code python> 
python -m pip install pip==9.0.3
</code>
  - Install gh-python-remote in Annconda - The first line installs gh-python-remote in the current Python interpreter. The second tries to find your Rhinoceros IronPython installation, and install gh-python-remote there. The extra options are necessary to be able to get the pre-release version of rpyc. <code python>
pip install gh-python-remote --upgrade --process-dependency-links --no-binary=:all:
python -m ghpythonremote._configure_ironpython_installation
</code>




