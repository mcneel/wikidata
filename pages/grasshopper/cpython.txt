====== Using Numpy SciPy and other Cpython libraries in GHPython ======

There are ways to use Numpy and Scipy within the GHPyton component in Grasshopper.


**[[https://www.food4rhino.com/app/gh-python-remote|Cpython Remote for Grasshopper]]**

GH Python Remote is a special component that lets you use regular Python code directly in the GHPython component, like importing Numpy, Scipy, matlplotib et al.  It is developed by Pierre Cuvilliers at MIT. See below for more instructions on installation and setup for Rhino 5.

**[[https://compas-dev.github.io/|COMPAS]]**


COMPAS is an open-source, Python-based computational framework for collaboration and research in architecture, 
engineering and digital fabrication. It is developed by the Block Research Group (https://block.arch.ethz.ch) of 
ETH Zurich (http://www.ethz.ch).


**[[https://www.food4rhino.com/app/ghcpython|CPython for Grasshopper]]**

Cpython plugin for Grasshopper
Aug 1st, 2017
[[https://github.com/MahmoudAbdelRahman/GH_CPython|GHCPython Github]]



-----

===== CPython Remote =====

GH Python Remote is a special component that lets you use regular Python 2.7.5 code directly in the Rhino 5 GHPython component, like importing Numpy, Scipy, matlplotib et al.

Setting this up takes many steps:

  -  Install Grasshopper for Rhino 5
  -  Setup an AnaConda virtual environment running Python 2.7.5, Nunpy, SciPy etc....
  -  Install GHPython for Grasshopper
  -  Update the Rhino Python engine used by Grasshopper to the release 2.7.5
  -  Install GHPython Remote in Grasshopper
  -  Run the GhPython Remote sample


==== Install Grasshopper for Rhino 5 ====

Make sure the Rhino 5 is SR9.  Check Help pulldown > About Rhinoceros > Lower right.

==== Setup an AnaConda virtual environment running Python 2.7.5 ====

1) Install Anconda Virtual Environment:

  - Install [[https://www.anaconda.com/download/|Anaconda 2 for Windows running Python 2.7]]
  - Do not worry about checking the Options about setting the Path or the default Python interpreter to Anadconda

2) Setup a new Anaconda Environment
  - Once installed, start up the Anaconda Prompt App.
  - Setup a new Rhinoremote environment by using the command <code python>
conda create -n rhinoremote python=2.7
</code>
  - Activate the new environment: <code python>
conda activate rhinoremote
</code>
  - Install Numpy, Scipy. Use this to install any other CPython libraries in the Rhinoremote envoronment: <code python>
conda install numpy
conda install scipy
</code>
  - Install gh-python-remote in Annconda: <code python>
pip install gh-python-remote --upgrade --process-dependency-links --no-binary=:all:
python -m ghpythonremote._configure_ironpython_installation
</code>

The first line installs gh-python-remote in the current Python interpreter. The second tries to find your Rhinoceros IronPython installation, and install gh-python-remote there. The extra options are necessary to be able to get the pre-release version of rpyc.


