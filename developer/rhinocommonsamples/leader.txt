===== Sample: Creating a Leader =====

===== C# =====
<code c#>
[System.Runtime.InteropServices.Guid("891F5AE0-DBE0-40A2-8C28-F59B8A757933")]
public class ex_leader : Rhino.Commands.Command
{
  public override string EnglishName { get { return "csLeader"; } }

  protected override Rhino.Commands.Result RunCommand(RhinoDoc doc, Rhino.Commands.RunMode mode)
  {
    var points = new List<Point3d>();
    points.Add(new Point3d(1, 1, 0));
    points.Add(new Point3d(5, 1, 0));
    points.Add(new Point3d(5, 5, 0));
    points.Add(new Point3d(9, 5, 0));

    var xyPlane = Plane.WorldXY;

    var pts2d = new List<Point2d>();
    foreach (var pt3d in points)
    {
      double x, y;
      if (xyPlane.ClosestParameter(pt3d, out x, out y))
      {
        var pt2d = new Point2d(x, y);
        if (pts2d.Count < 1 || pt2d.DistanceTo(pts2d.Last<Point2d>()) > RhinoMath.SqrtEpsilon)
          pts2d.Add(pt2d);
      }
    }

    doc.Objects.AddLeader(xyPlane, pts2d);
    doc.Views.Redraw();
    return Rhino.Commands.Result.Success;
  }
}
</code>
===== VB.NET =====
<code vb>
<System.Runtime.InteropServices.Guid("55EDA992-FF8B-4523-BF81-76FEE65E90F6")> _
Public Class ex_leader
  Inherits Rhino.Commands.Command
  Public Overrides ReadOnly Property EnglishName() As String
    Get
      Return "vbLeader"
    End Get
  End Property

  Protected Overrides Function RunCommand(doc As RhinoDoc, mode As Rhino.Commands.RunMode) As Rhino.Commands.Result
    Dim points = New List(Of Point3d)()
    points.Add(New Point3d(1, 1, 0))
    points.Add(New Point3d(5, 1, 0))
    points.Add(New Point3d(5, 5, 0))
    points.Add(New Point3d(9, 5, 0))

    Dim xyPlane = Plane.WorldXY

    Dim pts2d = New List(Of Point2d)()
    For Each pt3d As Point3d In points
      Dim x As Double, y As Double
      If xyPlane.ClosestParameter(pt3d, x, y) Then
        Dim pt2d = New Point2d(x, y)
        If pts2d.Count < 1 OrElse pt2d.DistanceTo(pts2d.Last()) > RhinoMath.SqrtEpsilon Then
          pts2d.Add(pt2d)
        End If
      End If
    Next

    doc.Objects.AddLeader(xyPlane, pts2d)
    doc.Views.Redraw()
    Return Rhino.Commands.Result.Success
  End Function
End Class
d Namespace
</code>
===== Python =====
<code python>
import rhinoscriptsyntax as rs

def RunCommand():
  points = [(1,1,0), (5,1,0), (5,5,0), (9,5,0)]
  rs.AddLeader(points)

if __name__ == "__main__":
    RunCommand()
</code>

{{tag>Developer rhinocommon}}
