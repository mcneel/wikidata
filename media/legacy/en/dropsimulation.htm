<html>
<head>
<title>Drop simulation</title>
</head>
<!-- Generated by ConTEXT HTML exporter -->
<body text="#000000" bgcolor="#FFFFFF">
<pre>
<code><font  face="Courier New"><font color="#808080">'Script written and copyrighted by David Rutten
'Reconstructivism.net
'December 7th 2004 revision
</font><font color="#0000FF">Option Explicit

Sub </font>SimulateRainDropPaths()
	<font color="#0000FF">Dim </font>DropStart
	<font color="#0000FF">Dim </font>blnSmoothPath
	<font color="#0000FF">Dim </font>blnFancyPreview
	<font color="#0000FF">Dim </font>blnStopOnEdge
	<font color="#0000FF">Dim </font>SampleStepSize
	<font color="#0000FF">Dim </font>Tolerance
	<font color="#0000FF">Dim </font>idObject
	<font color="#0000FF">Dim </font>strResult, arrOptions
	<font color="#0000FF">Dim </font>arrPaths(), P, retVal
	<font color="#0000FF">Dim </font>selMesh

	blnSmoothPath = <font color="#800000">Rhino</font>.<font color="#800000">GetSettings</font>(<font color="#800000">Rhino</font>.<font color="#800000">InstallFolder </font>&amp; <font color="#008000">&quot;Gelfling.ini&quot;</font>, <font color="#008000">&quot;DropSimulation&quot;</font>, <font color="#008000">&quot;Smooth&quot;</font>)
	<font color="#0000FF">If </font><font color="#000080">IsNull</font>(blnSmoothPath) <font color="#0000FF">Then </font>blnSmoothPath = vbFalse <font color="#0000FF">Else </font>blnSmoothPath = <font color="#000080">CBool</font>(blnSmoothPath)
	blnFancyPreview = <font color="#800000">Rhino</font>.<font color="#800000">GetSettings</font>(<font color="#800000">Rhino</font>.<font color="#800000">InstallFolder </font>&amp; <font color="#008000">&quot;Gelfling.ini&quot;</font>, <font color="#008000">&quot;DropSimulation&quot;</font>, <font color="#008000">&quot;Fancy&quot;</font>)
	<font color="#0000FF">If </font><font color="#000080">IsNull</font>(blnFancyPreview) <font color="#0000FF">Then </font>blnFancyPreview = vbFalse <font color="#0000FF">Else </font>blnFancyPreview = <font color="#000080">CBool</font>(blnFancyPreview)
	blnStopOnEdge = <font color="#800000">Rhino</font>.<font color="#800000">GetSettings</font>(<font color="#800000">Rhino</font>.<font color="#800000">InstallFolder </font>&amp; <font color="#008000">&quot;Gelfling.ini&quot;</font>, <font color="#008000">&quot;DropSimulation&quot;</font>, <font color="#008000">&quot;StopOnEdge&quot;</font>)
	<font color="#0000FF">If </font><font color="#000080">IsNull</font>(blnStopOnEdge) <font color="#0000FF">Then </font>blnStopOnEdge = vbFalse <font color="#0000FF">Else </font>blnStopOnEdge = <font color="#000080">CBool</font>(blnStopOnEdge)
	SampleStepSize = <font color="#800000">Rhino</font>.<font color="#800000">GetSettings</font>(<font color="#800000">Rhino</font>.<font color="#800000">InstallFolder </font>&amp; <font color="#008000">&quot;Gelfling.ini&quot;</font>, <font color="#008000">&quot;DropSimulation&quot;</font>, <font color="#008000">&quot;SampleStepSize&quot;</font>)
	<font color="#0000FF">If </font><font color="#000080">IsNull</font>(SampleStepSize) <font color="#0000FF">Then </font>SampleStepSize = <font color="#FF0000">100 </font>* <font color="#800000">Rhino</font>.<font color="#800000">UnitAbsoluteTolerance </font><font color="#0000FF">Else </font>SampleStepSize = <font color="#000080">CDbl</font>(SampleStepSize)
	Tolerance = <font color="#800000">Rhino</font>.<font color="#800000">UnitAbsoluteTolerance

</font>	idObject = <font color="#800000">Rhino</font>.<font color="#000080">GetObject</font>(<font color="#008000">&quot;Pick a surface for raindrop simulation&quot;</font>, <font color="#FF0000">8+16</font>, vbTrue, vbTrue)
	<font color="#0000FF">If </font><font color="#000080">IsNull</font>(idObject) <font color="#0000FF">Then Exit Sub
</font>	
	<font color="#800000">Rhino</font>.<font color="#800000">EnableRedraw </font>False
		<font color="#800000">Rhino</font>.<font color="#800000">Command </font><font color="#008000">&quot;-_Mesh _PolygonDensity=50 _Enter&quot;</font>, vbFalse
		selMesh = <font color="#800000">Rhino</font>.<font color="#800000">LastCreatedObjects
</font>		<font color="#0000FF">If </font><font color="#000080">IsNull</font>(selMesh) <font color="#0000FF">Then
</font>			<font color="#000080">msgBox </font><font color="#008000">&quot;Geometry could not be meshes&quot;</font>, <font color="#008080">vbOkOnly </font><font color="#000080">Or </font><font color="#008080">vbCritical</font>, <font color="#008000">&quot;Drop simulation&quot;
</font>			<font color="#0000FF">Exit Sub
</font>		<font color="#0000FF">Else
</font>			<font color="#800000">Rhino</font>.<font color="#800000">HideObjects </font>selMesh
		<font color="#0000FF">End If
</font>	<font color="#800000">Rhino</font>.<font color="#800000">EnableRedraw </font>True

	P = <font color="#FF0000">0
</font>	<font color="#0000FF">Do
</font>		arrOptions = <font color="#000080">Array</font>(<font color="#008000">&quot;Stepsize&quot;</font>, _
						   <font color="#008000">&quot;Tolerance&quot;</font>, _
						   <font color="#008000">&quot;Smooth_&quot; </font>&amp; Bln2Str(blnSmoothPath), _
						   <font color="#008000">&quot;Animate_&quot; </font>&amp; Bln2Str(blnFancyPreview), _
						   <font color="#008000">&quot;Simulate&quot;</font>, _
						   <font color="#008000">&quot;Finish&quot;</font>)
		strResult = <font color="#800000">Rhino</font>.<font color="#800000">GetString</font>(<font color="#008000">&quot;Drop-path simulation&quot;</font>, <font color="#008000">&quot;Simulate&quot;</font>, arrOptions)
		<font color="#0000FF">If </font><font color="#000080">IsNull</font>(strResult) <font color="#0000FF">Then </font>strResult = <font color="#008000">&quot;Finish&quot;
</font>		<font color="#0000FF">If </font><font color="#000080">IsNumeric</font>(strResult) <font color="#0000FF">Then
</font>			SampleStepSize = <font color="#000080">Abs</font>(<font color="#000080">CDbl</font>(strResult))
			<font color="#0000FF">If </font>SampleStepSize = <font color="#FF0000">0 </font><font color="#0000FF">Then </font>SampleStepSize = <font color="#FF0000">100</font>*<font color="#800000">Rhino</font>.<font color="#800000">UnitAbsoluteTolerance
</font>		<font color="#0000FF">Else
</font>			<font color="#0000FF">Select Case </font><font color="#000080">UCase</font>(<font color="#000080">Left</font>(strResult, <font color="#FF0000">2</font>))
			<font color="#0000FF">Case </font><font color="#008000">&quot;ST&quot;
</font>				strResult = <font color="#800000">Rhino</font>.<font color="#800000">GetReal</font>(<font color="#008000">&quot;Specify a new sample step size&quot;</font>, SampleStepSize, <font color="#FF0000">10</font>*Tolerance)
				<font color="#0000FF">If </font><font color="#000080">Not IsNull</font>(strResult) <font color="#0000FF">Then </font>SampleStepSize = strResult
			<font color="#0000FF">Case </font><font color="#008000">&quot;TO&quot;
</font>				strResult = <font color="#800000">Rhino</font>.<font color="#800000">GetReal</font>(<font color="#008000">&quot;Specify a new sample progression tolerance&quot;</font>, Tolerance, <font color="#800000">Rhino</font>.<font color="#800000">UnitAbsoluteTolerance</font>/<font color="#FF0000">100</font>, SampleStepSize/<font color="#FF0000">10</font>)
				<font color="#0000FF">If </font><font color="#000080">Not IsNull</font>(strResult) <font color="#0000FF">Then </font>Tolerance = strResult
			<font color="#0000FF">Case </font><font color="#008000">&quot;SM&quot;
</font>				blnSmoothPath = <font color="#000080">Not </font>blnSmoothPath
			<font color="#0000FF">Case </font><font color="#008000">&quot;QU&quot;
</font>				blnStopOnEdge = <font color="#000080">Not </font>blnStopOnEdge
			<font color="#0000FF">Case </font><font color="#008000">&quot;AN&quot;
</font>				blnFancyPreview = <font color="#000080">Not </font>blnFancyPreview
			<font color="#0000FF">Case </font><font color="#008000">&quot;SI&quot;
</font>				DropStart = <font color="#800000">Rhino</font>.<font color="#800000">GetPointOnMesh</font>(selMesh(<font color="#FF0000">0</font>), <font color="#008000">&quot;Pick a point to start the simulation&quot;</font>)
				<font color="#0000FF">If </font><font color="#000080">Not IsNull</font>(DropStart) <font color="#0000FF">Then
</font>					retVal = SimulateDrop(idObject, DropStart, blnSmoothPath, blnFancyPreview, blnStopOnEdge, SampleStepSize, Tolerance)
					<font color="#0000FF">If </font><font color="#000080">IsNull</font>(retVal) <font color="#0000FF">Then
</font>						<font color="#000080">msgBox </font><font color="#008000">&quot;An error occured during the simulation&quot;</font>, <font color="#008080">vbOkOnly</font>, <font color="#008000">&quot;Drop simulation&quot;
</font>					<font color="#0000FF">Else
</font>						<font color="#0000FF">ReDim Preserve </font>arrPaths(P)
						arrPaths(P) = retVal
						P = P<font color="#FF0000">+1
</font>					<font color="#0000FF">End If
</font>				<font color="#0000FF">End If
</font>			<font color="#0000FF">Case </font><font color="#008000">&quot;FI&quot;
</font>				<font color="#0000FF">Exit Do
</font>			<font color="#0000FF">Case Else
</font>				<font color="#800000">Rhino</font>.<font color="#800000">Command </font>strResult
			<font color="#0000FF">End Select
</font>		<font color="#0000FF">End If
</font>	<font color="#0000FF">Loop
</font>	
	<font color="#800000">Rhino</font>.<font color="#800000">EnableRedraw </font>False
		<font color="#800000">Rhino</font>.<font color="#800000">ShowObjects </font>selMesh
		<font color="#800000">Rhino</font>.<font color="#800000">DeleteObjects </font>selMesh
		<font color="#0000FF">If </font>P &gt; <font color="#FF0000">0 </font><font color="#0000FF">Then
</font>			<font color="#800000">Rhino</font>.<font color="#800000">SelectObjects </font>arrPaths
			<font color="#800000">Rhino</font>.<font color="#800000">UnselectObject </font>idObject
		<font color="#0000FF">End If
</font>	<font color="#800000">Rhino</font>.<font color="#800000">EnableRedraw </font>True

	<font color="#800000">Rhino</font>.<font color="#800000">SaveSettings Rhino</font>.<font color="#800000">InstallFolder </font>&amp; <font color="#008000">&quot;Gelfling.ini&quot;</font>, <font color="#008000">&quot;DropSimulation&quot;</font>, <font color="#008000">&quot;Smooth&quot;</font>, blnSmoothPath
	<font color="#800000">Rhino</font>.<font color="#800000">SaveSettings Rhino</font>.<font color="#800000">InstallFolder </font>&amp; <font color="#008000">&quot;Gelfling.ini&quot;</font>, <font color="#008000">&quot;DropSimulation&quot;</font>, <font color="#008000">&quot;Fancy&quot;</font>, blnFancyPreview
	<font color="#800000">Rhino</font>.<font color="#800000">SaveSettings Rhino</font>.<font color="#800000">InstallFolder </font>&amp; <font color="#008000">&quot;Gelfling.ini&quot;</font>, <font color="#008000">&quot;DropSimulation&quot;</font>, <font color="#008000">&quot;StopOnEdge&quot;</font>, blnStopOnEdge
	<font color="#800000">Rhino</font>.<font color="#800000">SaveSettings Rhino</font>.<font color="#800000">InstallFolder </font>&amp; <font color="#008000">&quot;Gelfling.ini&quot;</font>, <font color="#008000">&quot;DropSimulation&quot;</font>, <font color="#008000">&quot;SampleStepSize&quot;</font>, SampleStepSize

	<font color="#800000">Rhino</font>.<font color="#800000">Print </font><font color="#008000">&quot;Raindrop simulation finished&quot;
</font><font color="#0000FF">End Sub
</font>SimulateRainDropPaths

<font color="#0000FF">Function </font>SimulateDrop(Byval idObject, ByVal StartPt, Byval blnSmoothPath, Byval blnFancyPreview, Byval blnStopOnEdge, Byval SampleStepSize, Byval Tolerance)
	SimulateDrop = Null
	<font color="#0000FF">Dim </font>BBox, S
	<font color="#0000FF">Dim </font>idPath, arrVertices()
	<font color="#0000FF">Dim </font>BrepCP
	<font color="#0000FF">Dim </font>curPt, lowPt, newPt
	<font color="#0000FF">Dim </font>idPreview, PreviewSize

	BBox = <font color="#800000">Rhino</font>.<font color="#800000">BoundingBox</font>(idObject)
	<font color="#0000FF">If </font><font color="#000080">IsNull</font>(BBox) <font color="#0000FF">Then Exit Function

</font>	BrepCP = <font color="#800000">Rhino</font>.<font color="#800000">BrepClosestPoint</font>(idObject, StartPt)
	curPt = BrepCP(<font color="#FF0000">0</font>)
	idPreview = <font color="#008000">&quot;Nothing&quot;
</font>	PreviewSize = FastDistance(BBox(<font color="#FF0000">0</font>), BBox(<font color="#FF0000">6</font>))/<font color="#FF0000">500

</font>	<font color="#0000FF">If </font>blnFancyPreview <font color="#0000FF">Then </font><font color="#800000">Rhino</font>.<font color="#800000">LockObject </font>idObject

	<font color="#0000FF">If </font><font color="#000080">Not IsNull</font>(curPt) <font color="#0000FF">Then
</font>		<font color="#0000FF">ReDim </font>arrVertices(<font color="#FF0000">0</font>)
		arrVertices(<font color="#FF0000">0</font>) = curPt
		S = <font color="#FF0000">0
</font>		<font color="#0000FF">Do
</font>			lowPt = <font color="#000080">Array</font>(curPt(<font color="#FF0000">0</font>), curPt(<font color="#FF0000">1</font>), curPt(<font color="#FF0000">2</font>)<font color="#FF0000">-</font>SampleStepSize)
			BrepCP = <font color="#800000">Rhino</font>.<font color="#800000">BRepClosestPoint</font>(idObject, lowPt)
			newPt = BrepCP(<font color="#FF0000">0</font>)

			<font color="#0000FF">If </font>FastDistance(newPt, curPt) &lt; Tolerance <font color="#0000FF">Then Exit Do
</font>			<font color="#0000FF">If </font>newPt(<font color="#FF0000">2</font>) &gt; curPt(<font color="#FF0000">2</font>) <font color="#0000FF">Then Exit Do
</font>			<font color="#0000FF">ReDim Preserve </font>arrVertices(S)
			arrVertices(S) = newPt
			S = S<font color="#FF0000">+1

</font>			<font color="#0000FF">If </font>blnStopOnEdge <font color="#000080">And </font>BrepCP(<font color="#FF0000">2</font>) &lt;&gt; <font color="#FF0000">1342177280 </font><font color="#0000FF">Then Exit Do
</font>			<font color="#0000FF">If </font>blnFancyPreview <font color="#0000FF">Then
</font>				<font color="#800000">Rhino</font>.<font color="#800000">EnableRedraw </font>False
				<font color="#800000">Rhino</font>.<font color="#800000">DeleteObject </font>idPreview
				idPreview = DrawFancyArrow(curPt, newPt, PreviewSize)
				<font color="#800000">Rhino</font>.<font color="#800000">EnableRedraw </font>True
			<font color="#0000FF">End If

</font>			curPt = newPt
		<font color="#0000FF">Loop

</font>		<font color="#800000">Rhino</font>.<font color="#800000">DeleteObject </font>idPreview
		<font color="#800000">Rhino</font>.<font color="#800000">UnlockObject </font>idObject
		<font color="#0000FF">If </font>blnSmoothPath <font color="#0000FF">Then
</font>			idPath = <font color="#800000">Rhino</font>.<font color="#800000">AddCurve</font>(arrVertices, <font color="#FF0000">3</font>)
		<font color="#0000FF">Else
</font>			idPath = <font color="#800000">Rhino</font>.<font color="#800000">AddPolyLine</font>(arrVertices)
		<font color="#0000FF">End If
</font>	<font color="#0000FF">Else
</font>		<font color="#800000">Rhino</font>.<font color="#800000">Print </font><font color="#008000">&quot;Drop could be projected to the surface... an error occured&quot;
</font>		<font color="#0000FF">Exit Function
</font>	<font color="#0000FF">End If

</font>	SimulateDrop = idPath
<font color="#0000FF">End Function

Function </font>FastDistance(Byval arr1, Byval arr2)
	FastDistance = (arr1(<font color="#FF0000">0</font>)<font color="#FF0000">-</font>arr2(<font color="#FF0000">0</font>))*(arr1(<font color="#FF0000">0</font>)<font color="#FF0000">-</font>arr2(<font color="#FF0000">0</font>)) <font color="#FF0000">+ </font>(arr1(<font color="#FF0000">1</font>)<font color="#FF0000">-</font>arr2(<font color="#FF0000">1</font>))*(arr1(<font color="#FF0000">1</font>)<font color="#FF0000">-</font>arr2(<font color="#FF0000">1</font>)) <font color="#FF0000">+ </font>(arr1(<font color="#FF0000">2</font>)<font color="#FF0000">-</font>arr2(<font color="#FF0000">2</font>))*(arr1(<font color="#FF0000">2</font>)<font color="#FF0000">-</font>arr2(<font color="#FF0000">2</font>))
	FastDistance = <font color="#000080">Sqr</font>(FastDistance)
<font color="#0000FF">End Function

Function </font>Bln2Str(Byval input)
	<font color="#0000FF">If </font>input <font color="#0000FF">Then
</font>		Bln2Str = <font color="#008000">&quot;Yes&quot;
</font>		<font color="#0000FF">Exit Function
</font>	<font color="#0000FF">Else
</font>		Bln2Str = <font color="#008000">&quot;No&quot;
</font>		<font color="#0000FF">Exit Function
</font>	<font color="#0000FF">End If
End Function

Function </font>DrawFancyArrow(ByVal arrTail, Byval arrTip, Byval dblSize)
	DrawFancyArrow = <font color="#008000">&quot;Nothing&quot;

</font>	<font color="#0000FF">Dim </font>idMesh, Vertices(<font color="#FF0000">13</font>), Faces(<font color="#FF0000">10</font>)
	Vertices(<font color="#FF0000">0</font>) = <font color="#000080">Array</font>(<font color="#FF0000">0</font>,<font color="#FF0000">0</font>,<font color="#FF0000">0</font>)
	Vertices(<font color="#FF0000">1</font>) = <font color="#000080">Array</font>(<font color="#FF0000">6 </font>* dblSize, <font color="#FF0000">-5 </font>* dblSize,<font color="#FF0000">0</font>)
	Vertices(<font color="#FF0000">2</font>) = <font color="#000080">Array</font>(<font color="#FF0000">6 </font>* dblSize, <font color="#FF0000">-3 </font>* dblSize,<font color="#FF0000">0</font>)
	Vertices(<font color="#FF0000">3</font>) = <font color="#000080">Array</font>(<font color="#FF0000">16 </font>* dblSize, <font color="#FF0000">-3 </font>* dblSize,<font color="#FF0000">0</font>)
	Vertices(<font color="#FF0000">4</font>) = <font color="#000080">Array</font>(<font color="#FF0000">16 </font>* dblSize, <font color="#FF0000">+3 </font>* dblSize,<font color="#FF0000">0</font>)
	Vertices(<font color="#FF0000">5</font>) = <font color="#000080">Array</font>(<font color="#FF0000">6 </font>* dblSize, <font color="#FF0000">+3 </font>* dblSize,<font color="#FF0000">0</font>)
	Vertices(<font color="#FF0000">6</font>) = <font color="#000080">Array</font>(<font color="#FF0000">6 </font>* dblSize, <font color="#FF0000">+5 </font>* dblSize,<font color="#FF0000">0</font>)
	Vertices(<font color="#FF0000">7</font>) = <font color="#000080">Array</font>(<font color="#FF0000">0</font>,<font color="#FF0000">0</font>,<font color="#FF0000">2</font>*dblSize)
	Vertices(<font color="#FF0000">8</font>) = <font color="#000080">Array</font>(<font color="#FF0000">6 </font>* dblSize, <font color="#FF0000">-5 </font>* dblSize, <font color="#FF0000">2</font>*dblSize)
	Vertices(<font color="#FF0000">9</font>) = <font color="#000080">Array</font>(<font color="#FF0000">6 </font>* dblSize, <font color="#FF0000">-3 </font>* dblSize, <font color="#FF0000">2</font>*dblSize)
	Vertices(<font color="#FF0000">10</font>) = <font color="#000080">Array</font>(<font color="#FF0000">16 </font>* dblSize, <font color="#FF0000">-3 </font>* dblSize, <font color="#FF0000">2</font>*dblSize)
	Vertices(<font color="#FF0000">11</font>) = <font color="#000080">Array</font>(<font color="#FF0000">16 </font>* dblSize, <font color="#FF0000">+3 </font>* dblSize, <font color="#FF0000">2</font>*dblSize)
	Vertices(<font color="#FF0000">12</font>) = <font color="#000080">Array</font>(<font color="#FF0000">6 </font>* dblSize, <font color="#FF0000">+3 </font>* dblSize, <font color="#FF0000">2</font>*dblSize)
	Vertices(<font color="#FF0000">13</font>) = <font color="#000080">Array</font>(<font color="#FF0000">6 </font>* dblSize, <font color="#FF0000">+5 </font>* dblSize, <font color="#FF0000">2</font>*dblSize)
	Faces(<font color="#FF0000">0</font>) = <font color="#000080">Array</font>(<font color="#FF0000">0</font>,<font color="#FF0000">7</font>,<font color="#FF0000">8</font>,<font color="#FF0000">1</font>)
	Faces(<font color="#FF0000">1</font>) = <font color="#000080">Array</font>(<font color="#FF0000">1</font>,<font color="#FF0000">8</font>,<font color="#FF0000">9</font>,<font color="#FF0000">2</font>)
	Faces(<font color="#FF0000">2</font>) = <font color="#000080">Array</font>(<font color="#FF0000">2</font>,<font color="#FF0000">9</font>,<font color="#FF0000">10</font>,<font color="#FF0000">3</font>)
	Faces(<font color="#FF0000">3</font>) = <font color="#000080">Array</font>(<font color="#FF0000">3</font>,<font color="#FF0000">10</font>,<font color="#FF0000">11</font>,<font color="#FF0000">4</font>)
	Faces(<font color="#FF0000">4</font>) = <font color="#000080">Array</font>(<font color="#FF0000">4</font>,<font color="#FF0000">11</font>,<font color="#FF0000">12</font>,<font color="#FF0000">5</font>)
	Faces(<font color="#FF0000">5</font>) = <font color="#000080">Array</font>(<font color="#FF0000">5</font>,<font color="#FF0000">12</font>,<font color="#FF0000">13</font>,<font color="#FF0000">6</font>)
	Faces(<font color="#FF0000">6</font>) = <font color="#000080">Array</font>(<font color="#FF0000">6</font>,<font color="#FF0000">13</font>,<font color="#FF0000">7</font>,<font color="#FF0000">0</font>)
	Faces(<font color="#FF0000">7</font>) = <font color="#000080">Array</font>(<font color="#FF0000">7</font>,<font color="#FF0000">13</font>,<font color="#FF0000">8</font>,<font color="#FF0000">8</font>)
	Faces(<font color="#FF0000">8</font>) = <font color="#000080">Array</font>(<font color="#FF0000">9</font>,<font color="#FF0000">12</font>,<font color="#FF0000">11</font>,<font color="#FF0000">10</font>)
	Faces(<font color="#FF0000">9</font>) = <font color="#000080">Array</font>(<font color="#FF0000">0</font>,<font color="#FF0000">1</font>,<font color="#FF0000">6</font>,<font color="#FF0000">6</font>)
	Faces(<font color="#FF0000">10</font>) = <font color="#000080">Array</font>(<font color="#FF0000">2</font>,<font color="#FF0000">3</font>,<font color="#FF0000">4</font>,<font color="#FF0000">5</font>)

	<font color="#800000">Rhino</font>.<font color="#800000">EnableRedraw </font>False
		idMesh = <font color="#800000">Rhino</font>.<font color="#800000">AddMesh</font>(Vertices, Faces)
		idMesh = <font color="#800000">Rhino</font>.<font color="#800000">OrientObject</font>(idMesh, <font color="#000080">Array</font>(<font color="#000080">Array</font>(<font color="#FF0000">0</font>,<font color="#FF0000">0</font>,<font color="#FF0000">0</font>), <font color="#000080">Array</font>(<font color="#FF0000">1</font>,<font color="#FF0000">0</font>,<font color="#FF0000">0</font>)), <font color="#000080">Array</font>(arrTip, arrTail))
	<font color="#800000">Rhino</font>.<font color="#800000">EnableRedraw </font>True
	DrawFancyArrow = idMesh
<font color="#0000FF">End Function
</font></font>
</code></pre>
</body>
</html>