===== Sample: Loft Surfaces =====

===== C# =====
<code c#>
[System.Runtime.InteropServices.Guid("5D48CD31-B300-42B4-98F0-A7A4004B5227")]
public class ex_loft : Rhino.Commands.Command
{
  public override string EnglishName { get { return "csLoft"; } }

  protected override Rhino.Commands.Result RunCommand(RhinoDoc doc, Rhino.Commands.RunMode mode)
  {
    // select curves to loft
    var gs = new Rhino.Input.Custom.GetObject();
    gs.SetCommandPrompt("select curves to loft");
    gs.GeometryFilter = Rhino.DocObjects.ObjectType.Curve;
    gs.DisablePreSelect();
    gs.SubObjectSelect = false;
    gs.GetMultiple(2, 0);
    if (gs.CommandResult() != Result.Success)
      return gs.CommandResult();

    var crvs = new List<Curve>();
    foreach (var obj in gs.Objects())
      crvs.Add(obj.Curve());

    var breps = Rhino.Geometry.Brep.CreateFromLoft(crvs, Point3d.Unset, Point3d.Unset, LoftType.Tight, false);
    foreach (var brep in breps)
      doc.Objects.AddBrep(brep);

    doc.Views.Redraw();
    return Rhino.Commands.Result.Success;
  }
}
</code>
===== VB.NET =====
<code vb>
<System.Runtime.InteropServices.Guid("3CEE907B-1325-429E-A2DA-FA1DCA437567")> _
Public Class ex_loft
  Inherits Rhino.Commands.Command
  Public Overrides ReadOnly Property EnglishName() As String
    Get
      Return "vbLoft"
    End Get
  End Property

  Protected Overrides Function RunCommand(doc As RhinoDoc, mode As Rhino.Commands.RunMode) As Rhino.Commands.Result
    ' select curves to loft
    Dim gs = New Rhino.Input.Custom.GetObject()
    gs.SetCommandPrompt("select curves to loft")
    gs.GeometryFilter = Rhino.DocObjects.ObjectType.Curve
    gs.DisablePreSelect()
    gs.SubObjectSelect = False
    gs.GetMultiple(2, 0)
    If gs.CommandResult() <> Result.Success Then
      Return gs.CommandResult()
    End If

    Dim crvs = New List(Of Curve)()
    For Each obj As ObjRef In gs.Objects()
      crvs.Add(obj.Curve())
    Next

    Dim breps = Rhino.Geometry.Brep.CreateFromLoft(crvs, Point3d.Unset, Point3d.Unset, LoftType.Tight, False)
    For Each brep As Brep In breps
      doc.Objects.AddBrep(brep)
    Next

    doc.Views.Redraw()
    Return Rhino.Commands.Result.Success
  End Function
End Class
d Namespace
</code>
===== Python =====
<code python>
import rhinoscriptsyntax as rs

def RunCommand():
  crvids = rs.GetObjects(message="select curves to loft", filter=rs.filter.curve, minimum_count=2)
  if not crvids: return

  rs.AddLoftSrf(object_ids=crvids, loft_type = 3) #3 = tight

if __name__ == "__main__":
  RunCommand()
</code>

{{tag>Developer rhinocommon}}
