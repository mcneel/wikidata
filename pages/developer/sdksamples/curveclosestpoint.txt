====== How to: Find the Parameter of a Curve at a Point ======
====== C++, .NET ======
> **Summary:** //Demonstrates how to find the parameter of a curve at a given 3D point.//
> **Notice:** //The Rhino.NET SDK is deprecated in Rhino 5.  The example adapted for the new RhinoCommon SDK is [[developer:rhinocommonsamples:curveclosestpoint|here]].//

In general, to find the parameter of a point on a curve that is closest to a test point, use ON_Curve::GetClosestPoint(). See **opennurbs_curve.h** for more information.

The following sample code demonstrates how to find the parameter of a curve at a point. The code demonstrates how to select a curve object, and how to pick a point on a curve.

For more information on the CRhinoObjRef class, see **rhinoSdkObject.h**.

===== C++ =====
<code c++>
CRhinoCommand::result CCommandTest::RunCommand( 
    const CRhinoCommandContext& context )
{
  CRhinoGetObject go;
  go.SetCommandPrompt( L"Select curve" );
  go.SetGeometryFilter( CRhinoGetObject::curve_object );
  go.GetObjects( 1, 1 );
  if( go.CommandResult() != CRhinoCommand::success )
    return go.CommandResult();

  const CRhinoObjRef& objref = go.Object( 0 );
  const ON_Curve* crv = objref.Curve();
  if( !crv )
    return CRhinoCommand::failure;

  CRhinoGetPoint gp;
  gp.SetCommandPrompt( L"Pick a location on the curve" );
  gp.Constrain( *crv ); // constrain to curve
  gp.GetPoint();
  if( gp.CommandResult() != CRhinoCommand::success )
    return gp.CommandResult();

  ON_3dPoint pt = gp.Point();
  double t = 0.0;
  if( crv->GetClosestPoint(pt, &t) )
    RhinoApp().Print( 
      L"Curve parameter at (%f,%f,%f) is %g.\n",
      pt.x, pt.y, pt.z, t );

  return CRhinoCommand::success;
}

</code>
It is possible to save a step by examing the CRhinoObjRef class. The class return information on the picking operation that just occurred, including the object that was picked, the point that the user picked, and in this case, the paraemter of the curve that was closest to the picked point.


<code c++>
CRhinoCommand::result CCommandTest::RunCommand( 
      const CRhinoCommandContext& context )
{
  CRhinoGetObject go;
  go.SetCommandPrompt( L"Select curve" );
  go.SetGeometryFilter( CRhinoGetObject::curve_object );
  go.GetObjects( 1, 1 );
  if( go.CommandResult() != CRhinoCommand::success )
    return go.CommandResult();

  const CRhinoObjRef& objref = go.Object( 0 );

  ON_3dPoint pt;
  objref.SelectionPoint( pt )
  double t = 0.0;
  const ON_Curve* crv = objref.CurveParameter( &t );
  if( crv )
    RhinoApp().Print( 
        L"Curve parameter at (%f,%f,%f) is %g.\n",
        pt.x, pt.y, pt.z, t );

  return CRhinoCommand::success;
}

</code>
===== VB.NET =====
<code vb>
Public Overrides Function RunCommand(ByVal context As IRhinoCommandContext) _
  As IRhinoCommand.result
  Dim go As New MRhinoGetObject()
  go.SetCommandPrompt("Select curve")
  go.SetGeometryFilter(IRhinoGetObject.GEOMETRY_TYPE_FILTER.curve_object)
  go.GetObjects(1, 1)
  If (go.CommandResult() <> IRhinoCommand.result.success) Then
    Return go.CommandResult()
  End If

  Dim objref As MRhinoObjRef = go.Object(0)
  Dim crv As IOnCurve = objref.Curve()
  If (crv Is Nothing) Then
    Return IRhinoCommand.result.failure
  End If

  Dim gp As New MRhinoGetPoint()
  gp.SetCommandPrompt("Pick a location on the curve")
  gp.Constrain(crv)
  gp.GetPoint()
  If (gp.CommandResult() <> IRhinoCommand.result.success) Then
    Return gp.CommandResult()
  End If

  Dim pt As On3dPoint = gp.Point()
  Dim t As Double = 0.0
  If (crv.GetClosestPoint(pt, t)) Then
    Dim msg As String = String.Format("Curve parameter at ({0},{1},{2}) is {3}." _
        + vbCrLf, New Object() {pt.x, pt.y, pt.z, t})
    RhUtil.RhinoApp().Print(msg)
  End If
  Return IRhinoCommand.result.success
End Function
</code>
===== C# =====
<code c#>
public override IRhinoCommand.result RunCommand(IRhinoCommandContext context)
{
  MRhinoGetObject go = new MRhinoGetObject();
  go.SetCommandPrompt( "Select curve" );
  go.SetGeometryFilter( IRhinoGetObject.GEOMETRY_TYPE_FILTER.curve_object );
  go.GetObjects( 1, 1 );
  if( go.CommandResult() != IRhinoCommand.result.success )
    return go.CommandResult();

  MRhinoObjRef objref = go.Object(0);
  IOnCurve crv = objref.Curve();
  if( crv == null )
    return IRhinoCommand.result.failure;

  MRhinoGetPoint gp = new MRhinoGetPoint();
  gp.SetCommandPrompt( "Pick a location on the curve" );
  gp.Constrain( crv );
  gp.GetPoint();
  if( gp.CommandResult() != IRhinoCommand.result.success )
    return gp.CommandResult();

  On3dPoint pt = gp.Point();
  double t = 0.0;
  if( crv.GetClosestPoint(pt, ref t) )
  {
    string msg = string.Format("Curve parameter at ({0},{1},{2}) is {3}.\n",
      new object[] { pt.x, pt.y, pt.z, t });
    RhUtil.RhinoApp().Print( msg );
  }
  return IRhinoCommand.result.success;
}

</code>


{{tag>Developer cplusplus dotnet}}
